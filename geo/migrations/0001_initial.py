# Generated by Django 3.2.5 on 2021-10-27 20:27

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('geo', 'install_extensions'),
        ]

    operations = [
        migrations.CreateModel(
            name='Ageb',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('cve_ent', models.CharField(max_length=2)),
                ('POBTOT', models.PositiveIntegerField(blank=True,
                                                       help_text='Total de personas que residen habitualmente en el país, entidad federativa, municipio y localidad. Incluye la estimación del número de personas en viviendas particulares sin información de ocupantes. Incluye a la población que no especificó su edad.',
                                                       null=True, verbose_name='Población total')),
                ('POBMAS', models.PositiveIntegerField(blank=True,
                                                       help_text='Total de hombres que residen habitualmente en el país, entidad federativa, municipio y localidad. Incluye la estimación del número de hombres en viviendas particulares sin información de ocupantes. Incluye a la población que no especificó su edad.',
                                                       null=True, verbose_name='Población masculina')),
                ('POBFEM', models.PositiveIntegerField(blank=True,
                                                       help_text='Total de mujeres que residen habitualmente en el país, entidad federativa, municipio y localidad. Incluye la estimación del número de mujeres en viviendas particulares sin información de ocupantes. Incluye a la población que no especificó su edad.',
                                                       null=True, verbose_name='Población femenina')),
                ('P_0A2',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 0 a 2 años de edad.', null=True,
                                             verbose_name='Población de 0 a 2 años')),
                ('P_0A2_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 0 a 2 años de edad.', null=True,
                                             verbose_name='Población masculina de 0 a 2 años')),
                ('P_0A2_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 0 a 2 años de edad.', null=True,
                                             verbose_name='Población femenina de 0 a 2 años')),
                ('P_3YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 3 a 130 años de edad.', null=True,
                                             verbose_name='Población de 3 años y más')),
                ('P_3YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 3 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 3 años y más')),
                ('P_3YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 3 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 3 años y más ')),
                ('P_5YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 5 a 130 años de edad.', null=True,
                                             verbose_name='Población de 5 años y más')),
                ('P_5YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 5 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 5 años y más')),
                ('P_5YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 5 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 5 años y más ')),
                ('P_12YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 12 a 130 años de edad.', null=True,
                                             verbose_name='Población de 12 años y más')),
                ('P_12YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 12 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 12 años y más')),
                ('P_12YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 12 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 12 años y más ')),
                ('P_15YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 15 a 130 años de edad.', null=True,
                                             verbose_name='Población de 15 años y más')),
                ('P_15YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 15 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 15 años y más')),
                ('P_15YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 15 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 15 años y más ')),
                ('P_18YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 18 a 130 años de edad.', null=True,
                                             verbose_name='Población de 18 años y más')),
                ('P_18YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 18 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 18 años y más')),
                ('P_18YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 18 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 18 años y más ')),
                ('P_3A5',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 3 a 5 años de edad.', null=True,
                                             verbose_name='Población de 3 a 5 años')),
                ('P_3A5_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 3 a 5 años de edad.', null=True,
                                             verbose_name='Población masculina de 3 a 5 años')),
                ('P_3A5_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 3 a 5 años de edad.', null=True,
                                             verbose_name='Población femenina de 3 a 5 años')),
                ('P_6A11',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 6 a 11 años de edad.', null=True,
                                             verbose_name='Población de 6 a 11 años')),
                ('P_6A11_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 6 a 11 años de edad.', null=True,
                                             verbose_name='Población masculina de 6 a 11 años')),
                ('P_6A11_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 6 a 11 años de edad.', null=True,
                                             verbose_name='Población femenina de 6 a 11 años')),
                ('P_8A14',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 8 a 14 años de edad.', null=True,
                                             verbose_name='Población de 8 a 14 años')),
                ('P_8A14_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 8 a 14 años de edad.', null=True,
                                             verbose_name='Población masculina de 8 a 14 años')),
                ('P_8A14_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 8 a 14 años de edad.', null=True,
                                             verbose_name='Población femenina de 8 a 14 años')),
                ('P_12A14',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 12 a 14 años de edad.', null=True,
                                             verbose_name='Población de 12 a 14 años')),
                ('P_12A14_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 12 a 14 años de edad.', null=True,
                                             verbose_name='Población masculina de 12 a 14 años')),
                ('P_12A14_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 12 a 14 años de edad.', null=True,
                                             verbose_name='Población femenina de 12 a 14 años')),
                ('P_15A17',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 15 a 17 años de edad.', null=True,
                                             verbose_name='Población de 15 a 17 años')),
                ('P_15A17_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 15 a 17 años de edad.', null=True,
                                             verbose_name='Población masculina de 15 a 17 años')),
                ('P_15A17_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 15 a 17 años de edad.', null=True,
                                             verbose_name='Población femenina de 15 a 17 años')),
                ('P_18A24',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 18 a 24 años de edad.', null=True,
                                             verbose_name='Población de 18 a 24 años')),
                ('P_18A24_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 18 a 24 años de edad.', null=True,
                                             verbose_name='Población masculina de 18 a 24 años')),
                ('P_18A24_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 18 a 24 años de edad.', null=True,
                                             verbose_name='Población femenina de 18 a 24 años')),
                ('P_15A49',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 15 a 49 años de edad.', null=True,
                                             verbose_name='Población de 15 a 49 años')),
                ('P_15A49_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 15 a 49 años de edad.', null=True,
                                             verbose_name='Población masculina de 15 a 49 años')),
                ('P_15A49_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 15 a 49 años de edad.', null=True,
                                             verbose_name='Población femenina de 15 a 49 años')),
                ('P_60YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 60 a 130 años de edad.', null=True,
                                             verbose_name='Población de 60 años y más')),
                ('P_60YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 60 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 60 años y más')),
                ('P_60YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 60 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 60 años y más')),
                ('REL_H_M', models.PositiveIntegerField(blank=True,
                                                        help_text='Resultado de dividir el total de hombres entre el total de mujeres y multiplicarlo por cien. Indica el número de hombres por cada 100 mujeres..',
                                                        null=True, verbose_name='Relación hombres-mujeres')),
                ('POB0_14',
                 models.PositiveIntegerField(blank=True, help_text='Personas de cero a 14 años de edad.', null=True,
                                             verbose_name='Población de cero a 14 años')),
                ('POB15_64',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 15 a 64 años de edad.', null=True,
                                             verbose_name='Población de 15 a 64 años')),
                ('POB65_MAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 65 a 130 años de edad.', null=True,
                                             verbose_name='Población de 65 años y más')),
                ('PROM_HNV', models.PositiveIntegerField(blank=True,
                                                         help_text='Resultado de dividir el total de hijos nacidos vivos de las mujeres de 12 a 130 años de edad, entre el total de mujeres del mismo grupo de edad. Excluye a las mujeres que no especificaron el número de hijos..',
                                                         null=True, verbose_name='Promedio de hijos nacidos vivos')),
                ('PNACENT',
                 models.PositiveIntegerField(blank=True, help_text='Personas nacidas en la misma entidad federativa.',
                                             null=True, verbose_name='Población nacida en la entidad')),
                ('PNACENT_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres nacidos en la misma entidad federativa.',
                                             null=True, verbose_name='Población masculina nacida en la entidad')),
                ('PNACENT_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres nacidas en la misma entidad federativa.',
                                             null=True, verbose_name='Población femenina nacida en la entidad')),
                ('PNACOE',
                 models.PositiveIntegerField(blank=True, help_text='Personas nacidas en otra entidad federativa.',
                                             null=True, verbose_name='Población nacida en otra entidad')),
                ('PNACOE_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres nacidos en otra entidad federativa.',
                                             null=True, verbose_name='Población masculina nacida en otra entidad')),
                ('PNACOE_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres nacidas en otra entidad federativa.',
                                             null=True, verbose_name='Población femenina nacida en otra entidad')),
                ('PRES2005', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 5 a 130 años de edad que en los años 2005 y 2010 residían en la misma entidad federativa.',
                                                         null=True,
                                                         verbose_name='Población de 5 años y más residente en la entidad en junio de 2005')),
                ('PRES2005_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 5 a 130 años de edad que en los años 2005 y 2010 residían en la misma entidad federativa.',
                                                           null=True,
                                                           verbose_name='Población masculina de 5 años y más residente en la entidad en junio de 2005')),
                ('PRES2005_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 5 a 130 años de edad que en los años 2005 y 2010 residían en la misma entidad federativa.',
                                                           null=True,
                                                           verbose_name='Población femenina de 5 años y más residente en la entidad en junio de 2005')),
                ('PRESOE05', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 5 a 130 años de edad que en el año 2005 residían en otra entidad federativa.',
                                                         null=True,
                                                         verbose_name='Población de 5 años y más residente en otra entidad en junio de 2005')),
                ('PRESOE05_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 5 a 130 años de edad que en el año 2005 residían en otra entidad federativa.',
                                                           null=True,
                                                           verbose_name='Población masculina de 5 años y más residente en otra entidad en junio de 2005')),
                ('PRESOE05_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 5 a 130 años de edad que en el año 2005 residían en otra entidad federativa.',
                                                           null=True,
                                                           verbose_name='Población femenina de 5 años y más residente en otra entidad en junio de 2005')),
                ('P3YM_HLI', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 3 a 130 años de edad que hablan alguna lengua indígena.',
                                                         null=True,
                                                         verbose_name='Población de 3 años y más que habla alguna lengua indígena')),
                ('P3YM_HLI_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 3 a 130 años de edad que hablan alguna lengua indígena.',
                                                           null=True,
                                                           verbose_name='Población masculiina de 3 años y más que habla alguna lengua indígena')),
                ('P3YM_HLI_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 3 a 130 años de edad que hablan alguna lengua indígena.',
                                                           null=True,
                                                           verbose_name='Población femenina de 3 años y más que habla alguna lengua indígena')),
                ('P3HLINHE', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 3 a 130 años de edad que hablan alguna lengua indígena y además no hablan español.',
                                                         null=True,
                                                         verbose_name='Población de 3 años y más que habla alguna lengua indígena y no habla español')),
                ('P3HLINHE_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 3 a 130 años de edad que hablan alguna lengua indígena y además no hablan español.',
                                                           null=True,
                                                           verbose_name='Población masculina de 3 años y más que habla alguna lengua indígena y no habla español')),
                ('P3HLINHE_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 3 a 130 años de edad que hablan alguna lengua indígena y además no hablan español.',
                                                           null=True,
                                                           verbose_name='Población femeninade 3 años y más que habla alguna lengua indígena y no habla español')),
                ('P3HLI_HE', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 3 a 130 años de edad que hablan alguna lengua indígena y además hablan español.',
                                                         null=True,
                                                         verbose_name='Población de 3 años y más que habla alguna lengua indígena y habla español')),
                ('P3HLI_HE_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 3 a 130 años de edad que hablan alguna lengua indígena y además hablan español.',
                                                           null=True,
                                                           verbose_name='Población masculina de 3 años y más que habla alguna lengua indígena y habla español')),
                ('P3HLI_HE_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 3 a 130 años de edad que hablan alguna lengua indígena y además hablan español.',
                                                           null=True,
                                                           verbose_name='Población femenina de 3 años y más que habla alguna lengua indígena y habla español')),
                ('P5_HLI', models.PositiveIntegerField(blank=True,
                                                       help_text='Personas de 5 años y más que hablan alguna lengua indígena.',
                                                       null=True,
                                                       verbose_name='Población de 5 años y más que habla alguna lengua indígena')),
                ('P5_HLI_NHE', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas de 5 años y más que hablan alguna lengua indígena y no hablan español..',
                                                           null=True,
                                                           verbose_name='Población de 5 años y más que habla alguna lengua indígena y no habla español')),
                ('P5_HLI_HE', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 5 años y más que hablan alguna lengua indígena y que hablan español..',
                                                          null=True,
                                                          verbose_name='Población de 5 años y más que habla alguna lengua indígena y habla español')),
                ('PHOG_IND', models.PositiveIntegerField(blank=True,
                                                         help_text='Total de personas que forman hogares censales donde el jefe del hogar o su cónyuge hablan alguna lengua indígena.',
                                                         null=True,
                                                         verbose_name='Población en hogares censales indígenas')),
                ('PCON_LIM', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas que tienen dificultad para el desempeño y/o realización de tareas en la vida cotidiana.',
                                                         null=True,
                                                         verbose_name='Población con limitación en la actividad')),
                ('PCLIM_MOT', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas con dificultad para caminar o moverse, subir o bajar.',
                                                          null=True,
                                                          verbose_name='Población con limitación para caminar o moverse, subir o bajar')),
                ('PCLIM_VIS', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas con dificultad para ver, aún cuando usen lentes.',
                                                          null=True,
                                                          verbose_name='Población con limitación para ver, aún usando lentes')),
                ('PCLIM_LENG', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con dificultad para comunicarse con los demás o que tienen limitaciones para la recepción y producción de mensajes para hacerse entender a través del lenguaje, signos y símbolos..',
                                                           null=True,
                                                           verbose_name='Población con limitación para hablar, comunicarse o conversars')),
                ('PCLIM_AUD', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas con dificultad para escuchar, aún usando aparato auditivo.',
                                                          null=True,
                                                          verbose_name='Población con limitación para escuchar')),
                ('PCLIM_MOT2', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con dificultad para bañarse, vestirse y/o comer.',
                                                           null=True,
                                                           verbose_name='Población con limitación para vestirse, bañarse o comer')),
                ('PCLIM_MEN', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas con dificultad para mantener un nivel de atención en cosas sencillas.',
                                                          null=True,
                                                          verbose_name='Población con limitación para poner atención o aprender cosas sencillas')),
                ('PCLIM_MEN2', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con dificultad o con alguna limitación mental.',
                                                           null=True, verbose_name='Población con limitación mental')),
                ('PSIN_LIM', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas que no tienen dificultad para el desempeño y/o realización de tareas en la vida cotidiana.',
                                                         null=True,
                                                         verbose_name='Población sin limitación en la actividad')),
                ('P3A5_NOA', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 3 a 5 años de edad que no van a la escuela.',
                                                         null=True,
                                                         verbose_name='Población de 3 a 5 años que no asiste a la escuela')),
                ('P3A5_NOA_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 3 a 5 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población masculina de 3 a 5 años que no asiste a la escuela')),
                ('P3A5_NOA_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 3 a 5 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población femenina de 3 a 5 años que no asiste a la escuela')),
                ('P6A11_NOA', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 6 a 11 años de edad que no van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población de 6 a 11 años que no asiste a la escuela')),
                ('P6A11_NOAM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 6 a 11 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población masculina de 6 a 11 años que no asiste a la escuela')),
                ('P6A11_NOAF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 6 a 11 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población femenina de 6 a 11 años que no asiste a la escuela')),
                ('P12A14NOA', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 12 a 14 años de edad que no van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población de 12 a 14 años que no asiste a la escuela')),
                ('P12A14NOAM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 12 a 14 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población masculina de 12 a 14 años que no asiste a la escuela')),
                ('P12A14NOAF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 12 a 14 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población femenina de 12 a 14 años que no asiste a la escuela')),
                ('P15A17A', models.PositiveIntegerField(blank=True,
                                                        help_text='Personas de 15 a 17 años de edad que van a la escuela.',
                                                        null=True,
                                                        verbose_name='Población de 15 a 17 años que asiste a la escuela')),
                ('P15A17A_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Hombres de 15 a 17 años de edad que van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población masculina de 15 a 17 años que asiste a la escuela')),
                ('P15A17A_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Mujeres de 15 a 17 años de edad que van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población femenina de 15 a 17 años que asiste a la escuela')),
                ('P18A24A', models.PositiveIntegerField(blank=True,
                                                        help_text='Personas de 18 a 24 años de edad que van a la escuela.',
                                                        null=True,
                                                        verbose_name='Población de 18 a 24 años que asiste a la escuela')),
                ('P18A24A_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Hombres de 18 a 24 años de edad que van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población masculina de 18 a 24 años que asiste a la escuela')),
                ('P18A24A_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Mujeres de 18 a 24 años de edad que van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población femenina de 18 a 24 años que asiste a la escuela')),
                ('P8A14AN', models.PositiveIntegerField(blank=True,
                                                        help_text='Personas de 8 a 14 años de edad que no saben leer y escribir.',
                                                        null=True,
                                                        verbose_name='Población de 8 a 14 años que no saben leer y escribir')),
                ('P8A14AN_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Hombres de 8 a 14 años de edad que no saben leer y escribir.',
                                                          null=True,
                                                          verbose_name='Población mascuina de 8 a 14 años que no saben leer y escribir')),
                ('P8A14AN_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Mujeres de 8 a 14 años de edad que no saben leer y escribir.',
                                                          null=True,
                                                          verbose_name='Población femenina de 8 a 14 años que no saben leer y escribir')),
                ('P15YM_AN', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 15 a 130 años de edad que no saben leer ni escribir.',
                                                         null=True,
                                                         verbose_name='Población de 15 años y más analfabeta')),
                ('P15YM_AN_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que no saben leer ni escribir.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más analfabeta')),
                ('P15YM_AN_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que no saben leer ni escribir.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más analfabeta')),
                ('P15YM_SE', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 15 a 130 años de edad que no aprobaron ningún grado de escolaridad o que solo tienen nivel preescolar',
                                                         null=True,
                                                         verbose_name='Población de 15 años y más sin escolaridad')),
                ('P15YM_SE_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que no aprobaron ningún grado de escolaridad o que solo tienen nivel preescolar',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más sin escolaridad')),
                ('P15YM_SE_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que no aprobaron ningún grado de escolaridad o que solo tienen nivel preescolar',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más sin escolaridad')),
                ('P15PRI_IN', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 15 a 130 años de edad que tienen como máxima escolaridad hasta el quinto grado aprobado en primaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                          null=True,
                                                          verbose_name='Población de 15 años y más con primaria incompleta')),
                ('P15PRI_INM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que tienen como máxima escolaridad hasta el quinto grado aprobado en primaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más con primaria incompleta')),
                ('P15PRI_INF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que tienen como máxima escolaridad hasta el quinto grado aprobado en primaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más con primaria incompleta')),
                ('P15PRI_CO', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 15 a 130 años de edad que tienen como máxima escolaridad 6 grados aprobados en primaria.',
                                                          null=True,
                                                          verbose_name='Población de 15 años y más con primaria completa')),
                ('P15PRI_COM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que tienen como máxima escolaridad 6 grados aprobados en primaria.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más con primaria completa')),
                ('P15PRI_COF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que tienen como máxima escolaridad 6 grados aprobados en primaria.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más con primaria completa')),
                ('P15SEC_IN', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 15 a 130 años de edad que tienen como máxima escolaridad hasta segundo grado aprobado de secundaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                          null=True,
                                                          verbose_name='Población de 15 años y más con secundaria incompleta')),
                ('P15SEC_INM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que tienen como máxima escolaridad hasta segundo grado aprobado de secundaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más con secundaria incompleta')),
                ('P15SEC_INF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que tienen como máxima escolaridad hasta segundo grado aprobado de secundaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más con secundaria incompleta')),
                ('P15SEC_CO', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 15 a 130 años de edad que tienen como máxima escolaridad 3 grados aprobados en secundaria.',
                                                          null=True,
                                                          verbose_name='Población de 15 años y más con secundaria completa')),
                ('P15SEC_COM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que tienen como máxima escolaridad 3 grados aprobados en secundaria.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más con secundaria completa')),
                ('P15SEC_COF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que tienen como máxima escolaridad 3 grados aprobados en secundaria.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más con secundaria completa')),
                ('P18YM_PB', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 18 a 130 años de edad que tienen como máxima escolaridad algún grado aprobado en: preparatoria ó bachillerato; normal básica, estudios técnicos o comerciales con secundaria terminada; estudios técnicos o comerciales con preparatoria terminada; normal de licenciatura; licenciatura o profesional; maestría o doctorado. Incluye a las personas que no especificaron los grados aprobados en los niveles señalados.',
                                                         null=True,
                                                         verbose_name='Población de 18 años y más con educación pos-básica')),
                ('P18YM_PB_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 18 a 130 años de edad que tienen como máxima escolaridad algún grado aprobado en: preparatoria ó bachillerato; normal básica, estudios técnicos o comerciales con secundaria terminada; estudios técnicos o comerciales con preparatoria terminada; normal de licenciatura; licenciatura o profesional; maestría o doctorado. Incluye a las personas que no especificaron los grados aprobados en los niveles señalados.',
                                                           null=True,
                                                           verbose_name='Población masculina de 18 años y más con educación pos-básica')),
                ('P18YM_PB_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 18 a 130 años de edad que tienen como máxima escolaridad algún grado aprobado en: preparatoria ó bachillerato; normal básica, estudios técnicos o comerciales con secundaria terminada; estudios técnicos o comerciales con preparatoria terminada; normal de licenciatura; licenciatura o profesional; maestría o doctorado. Incluye a las personas que no especificaron los grados aprobados en los niveles señalados.',
                                                           null=True,
                                                           verbose_name='Población femenina de 18 años y más con educación pos-básica')),
                ('GRAPROES', models.PositiveIntegerField(blank=True,
                                                         help_text='Resultado de dividir el monto de grados escolares aprobados por las personas de 15 a 130 años de edad entre las personas del mismo grupo de edad. Excluye a las personas que no especificaron los grados aprobados.',
                                                         null=True, verbose_name='Grado promedio de escolaridad')),
                ('GRAPROES_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Resultado de dividir el monto de grados escolares aprobados por las personas de 15 a 130 años de edad entre los hombres del mismo grupo de edad. Excluye a las personas que no especificaron los grados aprobados.',
                                                           null=True,
                                                           verbose_name='Grado promedio de escolaridad de la población masculina')),
                ('GRAPROES_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Resultado de dividir el monto de grados escolares aprobados por las personas de 15 a 130 años de edad entre las mujeres del mismo grupo de edad. Excluye a las personas que no especificaron los grados aprobados.',
                                                           null=True,
                                                           verbose_name='Grado promedio de escolaridad de la población femenina')),
                ('PEA', models.PositiveIntegerField(blank=True,
                                                    help_text='Personas de 12 años y más que trabajaron; tenían trabajo pero no trabajaron o; buscaron trabajo en la semana de referencia.',
                                                    null=True, verbose_name='Población económicamente activa')),
                ('PEA_M', models.PositiveIntegerField(blank=True,
                                                      help_text='Hombres de 12 años y más que trabajaron; tenían trabajo pero no trabajaron o; buscaron trabajo en la semana de referencia.',
                                                      null=True,
                                                      verbose_name='Población masculina económicamente activa')),
                ('PEA_F', models.PositiveIntegerField(blank=True,
                                                      help_text='Mujeres de 12 años y más que trabajaron; tenían trabajo pero no trabajaron o; buscaron trabajo en la semana de referencia.',
                                                      null=True,
                                                      verbose_name='Población femenina económicamente activa')),
                ('PE_INAC', models.PositiveIntegerField(blank=True,
                                                        help_text='Personas de 12 años y más pensionadas o jubiladas, estudiantes, dedicadas a los quehaceres del hogar, que tienen alguna limitación física o mental permanente que le impide trabajar.',
                                                        null=True, verbose_name='Población no económicamente activa')),
                ('PE_INAC_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Hombres de 12 años y más pensionadas o jubiladas, estudiantes, dedicadas a los quehaceres del hogar, que tienen alguna limitación física o mental permanente que le impide trabajar.',
                                                          null=True,
                                                          verbose_name='Población masculina no económicamente activa')),
                ('PE_INAC_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Mujeres de 12 años y más pensionadas o jubiladas, estudiantes, dedicadas a los quehaceres del hogar, que tienen alguna limitación física o mental permanente que le impide trabajar.',
                                                          null=True,
                                                          verbose_name='Población femenina no económicamente activa')),
                ('POCUPADA', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 12 a 130 años de edad que trabajaron o que no trabajaron pero sí tenían trabajo en la semana de referencia.',
                                                         null=True, verbose_name='Población ocupada')),
                ('POCUPADA_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 12 a 130 años de edad que trabajaron o que no trabajaron pero sí tenían trabajo en la semana de referencia.',
                                                           null=True, verbose_name='Población masculina ocupada')),
                ('POCUPADA_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 12 a 130 años de edad que trabajaron o que no trabajaron pero sí tenían trabajo en la semana de referencia.',
                                                           null=True, verbose_name='Población femenina ocupada')),
                ('PDESOCUP', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 12 a 130 años de edad que no tenían trabajo, pero buscaron trabajo en la semana de referencia.',
                                                         null=True, verbose_name='Población desocupada')),
                ('PDESOCUP_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 12 a 130 años de edad que no tenían trabajo, pero buscaron trabajo en la semana de referencia.',
                                                           null=True, verbose_name='Población masculina desocupada')),
                ('PDESOCUP_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 12 a 130 años de edad que no tenían trabajo, pero buscaron trabajo en la semana de referencia.',
                                                           null=True, verbose_name='Población femenina desocupada')),
                ('PSINDER', models.PositiveIntegerField(blank=True,
                                                        help_text='Total de personas que no tienen derecho a recibir servicios médicos en ninguna institución pública o privada.',
                                                        null=True,
                                                        verbose_name='Población sin derechohabiencia a servicios de salud')),
                ('PDER_SS', models.PositiveIntegerField(blank=True,
                                                        help_text='Total de personas que tienen derecho a recibir servicios médicos en alguna institución de salud pública o privada como: el Instituto Mexicano del Seguro Social (IMSS), el Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado (ISSSTE e ISSSTE estatal), Petróleos Mexicanos (PEMEX), la Secretaría de la Defensa Nacional (SEDENA) o la Secretaría de Marina Armada de México (SEMAR), el Seguro Popular o para una Nueva Generación (Incluye al Sistema de Protección Social en Salud que coordina la Secretaría de Salud) o en otra.',
                                                        null=True,
                                                        verbose_name='Población derechohabiente a servicios de salud')),
                ('PDER_IMSS', models.PositiveIntegerField(blank=True,
                                                          help_text='Total de personas que tienen derecho a recibir servicios médicos en el Instituto Mexicano del Seguro Social (IMSS).',
                                                          null=True,
                                                          verbose_name='Población derechohabiente del IMSS')),
                ('PDER_ISTE', models.PositiveIntegerField(blank=True,
                                                          help_text='Total de personas que tienen derecho a recibir servicios médicos en el Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado.',
                                                          null=True,
                                                          verbose_name='Población derechohabiente del ISSSTE')),
                ('PDER_ISTEE', models.PositiveIntegerField(blank=True,
                                                           help_text='Total de personas que tienen derecho a recibir servicios médicos en los institutos de seguridad social de los estados (ISSSET, ISSSEMyM, ISSSTEZAC, ISSSPEA o ISSSTESON).',
                                                           null=True,
                                                           verbose_name='Población derechohabiente del ISSSTE estatal')),
                ('PDER_SEGP', models.PositiveIntegerField(blank=True,
                                                          help_text='Total de personas que tienen derecho a recibir servicios médicos en la Secretaría de Salud, mediante el Sistema de Protección Social en Salud (Seguro Popular).',
                                                          null=True,
                                                          verbose_name='Población derechohabiente del seguro popular o Seguro Médico para una Nueva Generación')),
                ('P12YM_SOLT', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas de 12 a 130 años de edad que viven con su pareja en unión libre; casadas solo por el civil; casadas religiosamente o; casadas por el civil y religiosamente.',
                                                           null=True,
                                                           verbose_name='Población casada o unida de 12 años y más')),
                ('P12YM_CASA', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas de 12 a 130 años de edad que viven con su pareja en unión libre; casadas solo por el civil; casadas solo religiosamente o; casadas por el civil y religiosamente.',
                                                           null=True,
                                                           verbose_name='Población casada o unida de 12 años y más')),
                ('P12YM_SEPA', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas de 12 a 130 años de edad que están separadas, divorciadas o viudas.',
                                                           null=True,
                                                           verbose_name='Población que estuvo casada o unida de 12 años y más')),
                ('PCATOLICA',
                 models.PositiveIntegerField(blank=True, help_text='Personas con religión católica.', null=True,
                                             verbose_name='Población con religión católica')),
                ('PNCATOLICA', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con religiones Protestantes Históricas, Pentecostales, Neopentecostales, Iglesia del Dios Vivo, Columna y Apoyo de la Verdad, la Luz del Mundo, Cristianas, Evangélicas y Bíblicas diferentes de las Evangélicas.',
                                                           null=True,
                                                           verbose_name='Protestantes, Evangélicas y Bíblicas diferentes de evangélicas')),
                ('POTRAS_REL', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con religiones de Origen oriental, Judaico, Islámico, New Age, Escuelas esotéricas, Raíces étnicas, Espiritualistas, Ortodoxos, Otros movimientos religiosos y Cultos populares.',
                                                           null=True,
                                                           verbose_name='Población con otras religiones diferentes a las anteriores')),
                ('PSIN_RELIG', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas sin adscripción religiosa. Incluye ateísmo.',
                                                           null=True,
                                                           verbose_name='Población con otras religiones diferentes a las anteriores')),
                ('TOTHOG', models.PositiveIntegerField(blank=True,
                                                       help_text='Hogares en viviendas particulares habitadas. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                       null=True, verbose_name='Total de hogares censales')),
                ('HOGJEF_M', models.PositiveIntegerField(blank=True,
                                                         help_text='Hogares en viviendas particulares habitadas donde el jefe es hombre. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                         null=True,
                                                         verbose_name='Hogares censales con jefatura masculina')),
                ('HOGJEF_F', models.PositiveIntegerField(blank=True,
                                                         help_text='Hogares en viviendas particulares habitadas donde el jefe es mujer. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                         null=True,
                                                         verbose_name='Hogares censales con jefatura femenina')),
                ('POBHOG', models.PositiveIntegerField(blank=True,
                                                       help_text='Personas en hogares censales. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                       null=True, verbose_name='Población en hogares censales')),
                ('PHOGJEF_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas en hogares censales donde el jefe es hombre. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                          null=True,
                                                          verbose_name='Población en hogares censales con jefatura masculina')),
                ('PHOGJEF_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas en hogares censales donde el jefe es mujer. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                          null=True,
                                                          verbose_name='Población en hogares censales con jefatura femenina')),
                ('VIVTOT', models.PositiveIntegerField(blank=True,
                                                       help_text='Viviendas particulares habitadas, deshabitadas, de uso temporal y colectivas. Incluye a las viviendas particulares sin información de sus ocupantes.',
                                                       null=True, verbose_name='Total de viviendas')),
                ('TVIVHAB', models.PositiveIntegerField(blank=True,
                                                        help_text='Viviendas particulares y colectivas habitadas. Incluye a las viviendas particulares sin información de sus ocupantes.',
                                                        null=True, verbose_name='Total de viviendas habitadas')),
                ('TVIVPAR', models.PositiveIntegerField(blank=True,
                                                        help_text='Viviendas particulares habitadas, deshabitadas y de uso temporal. Excluye a las viviendas particulares sin información de ocupantes.',
                                                        null=True, verbose_name='Total de viviendas particulares')),
                ('VIVPAR_HAB', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas de cualquier clase: casa independiente, departamento en edificio, vivienda o cuarto en vecindad, vivienda o cuarto de azotea, local no construido para habitación, vivienda móvil, refugios o clase no especificada. Excluye a las viviendas particulares sin información de ocupantes.',
                                                           null=True, verbose_name='Viviendas particulares habitadas')),
                ('TVIVPARHAB', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas de cualquier clase: casa independiente, departamento en edificio, vivienda o cuarto en vecindad, vivienda o cuarto de azotea, local no construido para habitación, vivienda móvil, refugios o clase no especificada. Incluye a las viviendas particulares sin información de ocupantes.',
                                                           null=True,
                                                           verbose_name='Total de viviendas particulares habitadas')),
                ('VIVPAR_DES',
                 models.PositiveIntegerField(blank=True, help_text='Viviendas particulares deshabitadas.', null=True,
                                             verbose_name='Viviendas particulares deshabitadas')),
                ('VIVPAR_UT',
                 models.PositiveIntegerField(blank=True, help_text='Viviendas particulares de uso temporal.', null=True,
                                             verbose_name='Viviendas particulares de uso temporal')),
                ('OCUPVIVPAR', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas que residen en viviendas particulares habitadas de cualquier clase: casa independiente, departamento en edificio, vivienda o cuarto en vecindad, vivienda o cuarto de azotea, local no construido para habitación, vivienda móvil, refugios o clase no especificada. Excluye la estimación del número de personas en viviendas particulares sin información de ocupantes.',
                                                           null=True,
                                                           verbose_name='Ocupantes en viviendas particulares habitadas')),
                ('PROM_OCUP', models.PositiveIntegerField(blank=True,
                                                          help_text='Resultado de dividir el número de personas que residen en viviendas particulares habitadas, entre el número de esas viviendas. Excluye la estimación del número de personas y de viviendas particulares sin información de ocupantes.',
                                                          null=True,
                                                          verbose_name='Promedio de ocupantes en viviendas particulares habitadas')),
                ('PRO_OCUP_C', models.PositiveIntegerField(blank=True,
                                                           help_text='Resultado de dividir el número de personas que residen en viviendas particulares habitadas entre el número de cuartos de esas viviendas. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Promedio de ocupantes por cuarto en viviendas particulares habitadas')),
                ('VPH_PISODT', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas con piso de cemento o firme, madera, mosaico u otro material. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con piso de material diferente de tierra')),
                ('VPH_PISOTI', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas con piso de tierra. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con piso de tierra')),
                ('VPH_1DOR', models.PositiveIntegerField(blank=True,
                                                         help_text='Viviendas particulares habitadas donde sólo uno de los cuartos se usa para dormir. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                         null=True,
                                                         verbose_name='Viviendas particulares habitadas con un dormitorio')),
                ('VPH_2YMASD', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que usan para dormir entre 2 y 25 cuartos.Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con dos dormitorios y más')),
                ('VPH_1CUART', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen un solo cuarto. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda. Excluye la estimación del número de personas y de viviendas particulares sin información de ocupantes.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con un solo cuarto')),
                ('VPH_2CUART', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen dos cuartos. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda. Excluye la estimación del número de personas y de viviendas particulares sin información de ocupantes.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con dos cuartos')),
                ('VPH_3YMASC', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen entre 3 y 25 cuartos. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con 3 cuartos y más')),
                ('VPH_C_ELEC', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen luz eléctrica. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que disponen de luz eléctrica')),
                ('VPH_S_ELEC', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que no tienen luz eléctrica. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que no disponen de luz eléctrica')),
                ('VPH_AGUADV', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen disponibilidad de agua entubada dentro de la vivienda, o fuera de la vivienda pero dentro del terreno. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que disponen de agua entubada en el ámbito de la vivienda')),
                ('VPH_AGUAFV', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen disponibilidad de agua de una llave pública o hidrante, de otra vivienda, de pipa, de pozo, río, arroyo, lago u otro. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que no disponen de agua entubada en el ámbito de la vivienda')),
                ('VPH_EXCSA', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen excusado, retrete, sanitario, letrina u hoyo negro. Excluye la estimación del número de personas y de viviendas particulares sin información de ocupantes.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de excusado o sanitario')),
                ('VPH_DRENAJ', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen drenaje conectado a la red pública, fosa séptica, barranca, grieta, río, lago o mar. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que disponen de drenaje')),
                ('VPH_NODREN', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que no tienen drenaje. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que no disponen de drenaje')),
                ('VPH_C_SERV', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen luz eléctrica, agua entubada dentro o fuera de la vivienda, pero dentro del terreno, así como drenaje. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que disponen de luz eléctrica, agua entubada de la red pública y drenaje')),
                ('VPH_SNBIEN', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que no disponen de radio, televisión, refrigerador, lavadora, automóvil, computadora, teléfono fijo, celular ni internet. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas sin ningún bien')),
                ('VPH_RADIO', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen radio. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a   que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de radio')),
                ('VPH_TV', models.PositiveIntegerField(blank=True,
                                                       help_text='Viviendas particulares habitadas que tienen televisor. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                       null=True,
                                                       verbose_name='Viviendas particulares habitadas que disponen de televisor')),
                ('VPH_REFRI', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen refrigerador. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de refrigerador')),
                ('VPH_LAVAD', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen lavadora. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda..',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de lavadora')),
                ('VPH_AUTOM', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen automóvil o camioneta. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de automóvil o camioneta')),
                ('VPH_PC', models.PositiveIntegerField(blank=True,
                                                       help_text='Viviendas particulares habitadas que tienen computadora. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                       null=True,
                                                       verbose_name='Viviendas particulares habitadas que disponen de computadora')),
                ('VPH_TELEF', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen línea telefónica fija. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de línea telefónica fija')),
                ('VPH_CEL', models.PositiveIntegerField(blank=True,
                                                        help_text='Viviendas particulares habitadas que tienen teléfono celular. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                        null=True,
                                                        verbose_name='Viviendas particulares habitadas que disponen de teléfono celular')),
                ('VPH_INTER', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen servicio de internet. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de internet')),
                ('ambito',
                 models.PositiveSmallIntegerField(blank=True, choices=[(0, 'No Aplica'), (1, 'Urbana'), (2, 'Rural')],
                                                  null=True)),
                ('cvegeo', models.CharField(max_length=13)),
                ('cve_mun', models.CharField(max_length=3)),
                ('cve_loc', models.CharField(max_length=4, null=True)),
                ('cve_ageb', models.CharField(max_length=4)),
                ],
            options={
                'abstract': False,
                },
            ),
        migrations.CreateModel(
            name='Entidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('cve_ent', models.CharField(max_length=2)),
                ('POBTOT', models.PositiveIntegerField(blank=True,
                                                       help_text='Total de personas que residen habitualmente en el país, entidad federativa, municipio y localidad. Incluye la estimación del número de personas en viviendas particulares sin información de ocupantes. Incluye a la población que no especificó su edad.',
                                                       null=True, verbose_name='Población total')),
                ('POBMAS', models.PositiveIntegerField(blank=True,
                                                       help_text='Total de hombres que residen habitualmente en el país, entidad federativa, municipio y localidad. Incluye la estimación del número de hombres en viviendas particulares sin información de ocupantes. Incluye a la población que no especificó su edad.',
                                                       null=True, verbose_name='Población masculina')),
                ('POBFEM', models.PositiveIntegerField(blank=True,
                                                       help_text='Total de mujeres que residen habitualmente en el país, entidad federativa, municipio y localidad. Incluye la estimación del número de mujeres en viviendas particulares sin información de ocupantes. Incluye a la población que no especificó su edad.',
                                                       null=True, verbose_name='Población femenina')),
                ('P_0A2',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 0 a 2 años de edad.', null=True,
                                             verbose_name='Población de 0 a 2 años')),
                ('P_0A2_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 0 a 2 años de edad.', null=True,
                                             verbose_name='Población masculina de 0 a 2 años')),
                ('P_0A2_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 0 a 2 años de edad.', null=True,
                                             verbose_name='Población femenina de 0 a 2 años')),
                ('P_3YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 3 a 130 años de edad.', null=True,
                                             verbose_name='Población de 3 años y más')),
                ('P_3YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 3 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 3 años y más')),
                ('P_3YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 3 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 3 años y más ')),
                ('P_5YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 5 a 130 años de edad.', null=True,
                                             verbose_name='Población de 5 años y más')),
                ('P_5YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 5 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 5 años y más')),
                ('P_5YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 5 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 5 años y más ')),
                ('P_12YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 12 a 130 años de edad.', null=True,
                                             verbose_name='Población de 12 años y más')),
                ('P_12YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 12 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 12 años y más')),
                ('P_12YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 12 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 12 años y más ')),
                ('P_15YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 15 a 130 años de edad.', null=True,
                                             verbose_name='Población de 15 años y más')),
                ('P_15YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 15 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 15 años y más')),
                ('P_15YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 15 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 15 años y más ')),
                ('P_18YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 18 a 130 años de edad.', null=True,
                                             verbose_name='Población de 18 años y más')),
                ('P_18YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 18 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 18 años y más')),
                ('P_18YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 18 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 18 años y más ')),
                ('P_3A5',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 3 a 5 años de edad.', null=True,
                                             verbose_name='Población de 3 a 5 años')),
                ('P_3A5_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 3 a 5 años de edad.', null=True,
                                             verbose_name='Población masculina de 3 a 5 años')),
                ('P_3A5_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 3 a 5 años de edad.', null=True,
                                             verbose_name='Población femenina de 3 a 5 años')),
                ('P_6A11',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 6 a 11 años de edad.', null=True,
                                             verbose_name='Población de 6 a 11 años')),
                ('P_6A11_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 6 a 11 años de edad.', null=True,
                                             verbose_name='Población masculina de 6 a 11 años')),
                ('P_6A11_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 6 a 11 años de edad.', null=True,
                                             verbose_name='Población femenina de 6 a 11 años')),
                ('P_8A14',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 8 a 14 años de edad.', null=True,
                                             verbose_name='Población de 8 a 14 años')),
                ('P_8A14_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 8 a 14 años de edad.', null=True,
                                             verbose_name='Población masculina de 8 a 14 años')),
                ('P_8A14_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 8 a 14 años de edad.', null=True,
                                             verbose_name='Población femenina de 8 a 14 años')),
                ('P_12A14',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 12 a 14 años de edad.', null=True,
                                             verbose_name='Población de 12 a 14 años')),
                ('P_12A14_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 12 a 14 años de edad.', null=True,
                                             verbose_name='Población masculina de 12 a 14 años')),
                ('P_12A14_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 12 a 14 años de edad.', null=True,
                                             verbose_name='Población femenina de 12 a 14 años')),
                ('P_15A17',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 15 a 17 años de edad.', null=True,
                                             verbose_name='Población de 15 a 17 años')),
                ('P_15A17_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 15 a 17 años de edad.', null=True,
                                             verbose_name='Población masculina de 15 a 17 años')),
                ('P_15A17_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 15 a 17 años de edad.', null=True,
                                             verbose_name='Población femenina de 15 a 17 años')),
                ('P_18A24',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 18 a 24 años de edad.', null=True,
                                             verbose_name='Población de 18 a 24 años')),
                ('P_18A24_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 18 a 24 años de edad.', null=True,
                                             verbose_name='Población masculina de 18 a 24 años')),
                ('P_18A24_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 18 a 24 años de edad.', null=True,
                                             verbose_name='Población femenina de 18 a 24 años')),
                ('P_15A49',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 15 a 49 años de edad.', null=True,
                                             verbose_name='Población de 15 a 49 años')),
                ('P_15A49_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 15 a 49 años de edad.', null=True,
                                             verbose_name='Población masculina de 15 a 49 años')),
                ('P_15A49_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 15 a 49 años de edad.', null=True,
                                             verbose_name='Población femenina de 15 a 49 años')),
                ('P_60YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 60 a 130 años de edad.', null=True,
                                             verbose_name='Población de 60 años y más')),
                ('P_60YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 60 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 60 años y más')),
                ('P_60YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 60 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 60 años y más')),
                ('REL_H_M', models.PositiveIntegerField(blank=True,
                                                        help_text='Resultado de dividir el total de hombres entre el total de mujeres y multiplicarlo por cien. Indica el número de hombres por cada 100 mujeres..',
                                                        null=True, verbose_name='Relación hombres-mujeres')),
                ('POB0_14',
                 models.PositiveIntegerField(blank=True, help_text='Personas de cero a 14 años de edad.', null=True,
                                             verbose_name='Población de cero a 14 años')),
                ('POB15_64',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 15 a 64 años de edad.', null=True,
                                             verbose_name='Población de 15 a 64 años')),
                ('POB65_MAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 65 a 130 años de edad.', null=True,
                                             verbose_name='Población de 65 años y más')),
                ('PROM_HNV', models.PositiveIntegerField(blank=True,
                                                         help_text='Resultado de dividir el total de hijos nacidos vivos de las mujeres de 12 a 130 años de edad, entre el total de mujeres del mismo grupo de edad. Excluye a las mujeres que no especificaron el número de hijos..',
                                                         null=True, verbose_name='Promedio de hijos nacidos vivos')),
                ('PNACENT',
                 models.PositiveIntegerField(blank=True, help_text='Personas nacidas en la misma entidad federativa.',
                                             null=True, verbose_name='Población nacida en la entidad')),
                ('PNACENT_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres nacidos en la misma entidad federativa.',
                                             null=True, verbose_name='Población masculina nacida en la entidad')),
                ('PNACENT_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres nacidas en la misma entidad federativa.',
                                             null=True, verbose_name='Población femenina nacida en la entidad')),
                ('PNACOE',
                 models.PositiveIntegerField(blank=True, help_text='Personas nacidas en otra entidad federativa.',
                                             null=True, verbose_name='Población nacida en otra entidad')),
                ('PNACOE_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres nacidos en otra entidad federativa.',
                                             null=True, verbose_name='Población masculina nacida en otra entidad')),
                ('PNACOE_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres nacidas en otra entidad federativa.',
                                             null=True, verbose_name='Población femenina nacida en otra entidad')),
                ('PRES2005', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 5 a 130 años de edad que en los años 2005 y 2010 residían en la misma entidad federativa.',
                                                         null=True,
                                                         verbose_name='Población de 5 años y más residente en la entidad en junio de 2005')),
                ('PRES2005_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 5 a 130 años de edad que en los años 2005 y 2010 residían en la misma entidad federativa.',
                                                           null=True,
                                                           verbose_name='Población masculina de 5 años y más residente en la entidad en junio de 2005')),
                ('PRES2005_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 5 a 130 años de edad que en los años 2005 y 2010 residían en la misma entidad federativa.',
                                                           null=True,
                                                           verbose_name='Población femenina de 5 años y más residente en la entidad en junio de 2005')),
                ('PRESOE05', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 5 a 130 años de edad que en el año 2005 residían en otra entidad federativa.',
                                                         null=True,
                                                         verbose_name='Población de 5 años y más residente en otra entidad en junio de 2005')),
                ('PRESOE05_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 5 a 130 años de edad que en el año 2005 residían en otra entidad federativa.',
                                                           null=True,
                                                           verbose_name='Población masculina de 5 años y más residente en otra entidad en junio de 2005')),
                ('PRESOE05_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 5 a 130 años de edad que en el año 2005 residían en otra entidad federativa.',
                                                           null=True,
                                                           verbose_name='Población femenina de 5 años y más residente en otra entidad en junio de 2005')),
                ('P3YM_HLI', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 3 a 130 años de edad que hablan alguna lengua indígena.',
                                                         null=True,
                                                         verbose_name='Población de 3 años y más que habla alguna lengua indígena')),
                ('P3YM_HLI_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 3 a 130 años de edad que hablan alguna lengua indígena.',
                                                           null=True,
                                                           verbose_name='Población masculiina de 3 años y más que habla alguna lengua indígena')),
                ('P3YM_HLI_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 3 a 130 años de edad que hablan alguna lengua indígena.',
                                                           null=True,
                                                           verbose_name='Población femenina de 3 años y más que habla alguna lengua indígena')),
                ('P3HLINHE', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 3 a 130 años de edad que hablan alguna lengua indígena y además no hablan español.',
                                                         null=True,
                                                         verbose_name='Población de 3 años y más que habla alguna lengua indígena y no habla español')),
                ('P3HLINHE_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 3 a 130 años de edad que hablan alguna lengua indígena y además no hablan español.',
                                                           null=True,
                                                           verbose_name='Población masculina de 3 años y más que habla alguna lengua indígena y no habla español')),
                ('P3HLINHE_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 3 a 130 años de edad que hablan alguna lengua indígena y además no hablan español.',
                                                           null=True,
                                                           verbose_name='Población femeninade 3 años y más que habla alguna lengua indígena y no habla español')),
                ('P3HLI_HE', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 3 a 130 años de edad que hablan alguna lengua indígena y además hablan español.',
                                                         null=True,
                                                         verbose_name='Población de 3 años y más que habla alguna lengua indígena y habla español')),
                ('P3HLI_HE_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 3 a 130 años de edad que hablan alguna lengua indígena y además hablan español.',
                                                           null=True,
                                                           verbose_name='Población masculina de 3 años y más que habla alguna lengua indígena y habla español')),
                ('P3HLI_HE_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 3 a 130 años de edad que hablan alguna lengua indígena y además hablan español.',
                                                           null=True,
                                                           verbose_name='Población femenina de 3 años y más que habla alguna lengua indígena y habla español')),
                ('P5_HLI', models.PositiveIntegerField(blank=True,
                                                       help_text='Personas de 5 años y más que hablan alguna lengua indígena.',
                                                       null=True,
                                                       verbose_name='Población de 5 años y más que habla alguna lengua indígena')),
                ('P5_HLI_NHE', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas de 5 años y más que hablan alguna lengua indígena y no hablan español..',
                                                           null=True,
                                                           verbose_name='Población de 5 años y más que habla alguna lengua indígena y no habla español')),
                ('P5_HLI_HE', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 5 años y más que hablan alguna lengua indígena y que hablan español..',
                                                          null=True,
                                                          verbose_name='Población de 5 años y más que habla alguna lengua indígena y habla español')),
                ('PHOG_IND', models.PositiveIntegerField(blank=True,
                                                         help_text='Total de personas que forman hogares censales donde el jefe del hogar o su cónyuge hablan alguna lengua indígena.',
                                                         null=True,
                                                         verbose_name='Población en hogares censales indígenas')),
                ('PCON_LIM', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas que tienen dificultad para el desempeño y/o realización de tareas en la vida cotidiana.',
                                                         null=True,
                                                         verbose_name='Población con limitación en la actividad')),
                ('PCLIM_MOT', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas con dificultad para caminar o moverse, subir o bajar.',
                                                          null=True,
                                                          verbose_name='Población con limitación para caminar o moverse, subir o bajar')),
                ('PCLIM_VIS', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas con dificultad para ver, aún cuando usen lentes.',
                                                          null=True,
                                                          verbose_name='Población con limitación para ver, aún usando lentes')),
                ('PCLIM_LENG', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con dificultad para comunicarse con los demás o que tienen limitaciones para la recepción y producción de mensajes para hacerse entender a través del lenguaje, signos y símbolos..',
                                                           null=True,
                                                           verbose_name='Población con limitación para hablar, comunicarse o conversars')),
                ('PCLIM_AUD', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas con dificultad para escuchar, aún usando aparato auditivo.',
                                                          null=True,
                                                          verbose_name='Población con limitación para escuchar')),
                ('PCLIM_MOT2', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con dificultad para bañarse, vestirse y/o comer.',
                                                           null=True,
                                                           verbose_name='Población con limitación para vestirse, bañarse o comer')),
                ('PCLIM_MEN', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas con dificultad para mantener un nivel de atención en cosas sencillas.',
                                                          null=True,
                                                          verbose_name='Población con limitación para poner atención o aprender cosas sencillas')),
                ('PCLIM_MEN2', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con dificultad o con alguna limitación mental.',
                                                           null=True, verbose_name='Población con limitación mental')),
                ('PSIN_LIM', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas que no tienen dificultad para el desempeño y/o realización de tareas en la vida cotidiana.',
                                                         null=True,
                                                         verbose_name='Población sin limitación en la actividad')),
                ('P3A5_NOA', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 3 a 5 años de edad que no van a la escuela.',
                                                         null=True,
                                                         verbose_name='Población de 3 a 5 años que no asiste a la escuela')),
                ('P3A5_NOA_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 3 a 5 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población masculina de 3 a 5 años que no asiste a la escuela')),
                ('P3A5_NOA_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 3 a 5 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población femenina de 3 a 5 años que no asiste a la escuela')),
                ('P6A11_NOA', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 6 a 11 años de edad que no van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población de 6 a 11 años que no asiste a la escuela')),
                ('P6A11_NOAM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 6 a 11 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población masculina de 6 a 11 años que no asiste a la escuela')),
                ('P6A11_NOAF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 6 a 11 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población femenina de 6 a 11 años que no asiste a la escuela')),
                ('P12A14NOA', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 12 a 14 años de edad que no van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población de 12 a 14 años que no asiste a la escuela')),
                ('P12A14NOAM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 12 a 14 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población masculina de 12 a 14 años que no asiste a la escuela')),
                ('P12A14NOAF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 12 a 14 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población femenina de 12 a 14 años que no asiste a la escuela')),
                ('P15A17A', models.PositiveIntegerField(blank=True,
                                                        help_text='Personas de 15 a 17 años de edad que van a la escuela.',
                                                        null=True,
                                                        verbose_name='Población de 15 a 17 años que asiste a la escuela')),
                ('P15A17A_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Hombres de 15 a 17 años de edad que van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población masculina de 15 a 17 años que asiste a la escuela')),
                ('P15A17A_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Mujeres de 15 a 17 años de edad que van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población femenina de 15 a 17 años que asiste a la escuela')),
                ('P18A24A', models.PositiveIntegerField(blank=True,
                                                        help_text='Personas de 18 a 24 años de edad que van a la escuela.',
                                                        null=True,
                                                        verbose_name='Población de 18 a 24 años que asiste a la escuela')),
                ('P18A24A_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Hombres de 18 a 24 años de edad que van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población masculina de 18 a 24 años que asiste a la escuela')),
                ('P18A24A_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Mujeres de 18 a 24 años de edad que van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población femenina de 18 a 24 años que asiste a la escuela')),
                ('P8A14AN', models.PositiveIntegerField(blank=True,
                                                        help_text='Personas de 8 a 14 años de edad que no saben leer y escribir.',
                                                        null=True,
                                                        verbose_name='Población de 8 a 14 años que no saben leer y escribir')),
                ('P8A14AN_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Hombres de 8 a 14 años de edad que no saben leer y escribir.',
                                                          null=True,
                                                          verbose_name='Población mascuina de 8 a 14 años que no saben leer y escribir')),
                ('P8A14AN_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Mujeres de 8 a 14 años de edad que no saben leer y escribir.',
                                                          null=True,
                                                          verbose_name='Población femenina de 8 a 14 años que no saben leer y escribir')),
                ('P15YM_AN', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 15 a 130 años de edad que no saben leer ni escribir.',
                                                         null=True,
                                                         verbose_name='Población de 15 años y más analfabeta')),
                ('P15YM_AN_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que no saben leer ni escribir.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más analfabeta')),
                ('P15YM_AN_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que no saben leer ni escribir.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más analfabeta')),
                ('P15YM_SE', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 15 a 130 años de edad que no aprobaron ningún grado de escolaridad o que solo tienen nivel preescolar',
                                                         null=True,
                                                         verbose_name='Población de 15 años y más sin escolaridad')),
                ('P15YM_SE_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que no aprobaron ningún grado de escolaridad o que solo tienen nivel preescolar',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más sin escolaridad')),
                ('P15YM_SE_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que no aprobaron ningún grado de escolaridad o que solo tienen nivel preescolar',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más sin escolaridad')),
                ('P15PRI_IN', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 15 a 130 años de edad que tienen como máxima escolaridad hasta el quinto grado aprobado en primaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                          null=True,
                                                          verbose_name='Población de 15 años y más con primaria incompleta')),
                ('P15PRI_INM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que tienen como máxima escolaridad hasta el quinto grado aprobado en primaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más con primaria incompleta')),
                ('P15PRI_INF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que tienen como máxima escolaridad hasta el quinto grado aprobado en primaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más con primaria incompleta')),
                ('P15PRI_CO', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 15 a 130 años de edad que tienen como máxima escolaridad 6 grados aprobados en primaria.',
                                                          null=True,
                                                          verbose_name='Población de 15 años y más con primaria completa')),
                ('P15PRI_COM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que tienen como máxima escolaridad 6 grados aprobados en primaria.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más con primaria completa')),
                ('P15PRI_COF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que tienen como máxima escolaridad 6 grados aprobados en primaria.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más con primaria completa')),
                ('P15SEC_IN', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 15 a 130 años de edad que tienen como máxima escolaridad hasta segundo grado aprobado de secundaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                          null=True,
                                                          verbose_name='Población de 15 años y más con secundaria incompleta')),
                ('P15SEC_INM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que tienen como máxima escolaridad hasta segundo grado aprobado de secundaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más con secundaria incompleta')),
                ('P15SEC_INF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que tienen como máxima escolaridad hasta segundo grado aprobado de secundaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más con secundaria incompleta')),
                ('P15SEC_CO', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 15 a 130 años de edad que tienen como máxima escolaridad 3 grados aprobados en secundaria.',
                                                          null=True,
                                                          verbose_name='Población de 15 años y más con secundaria completa')),
                ('P15SEC_COM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que tienen como máxima escolaridad 3 grados aprobados en secundaria.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más con secundaria completa')),
                ('P15SEC_COF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que tienen como máxima escolaridad 3 grados aprobados en secundaria.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más con secundaria completa')),
                ('P18YM_PB', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 18 a 130 años de edad que tienen como máxima escolaridad algún grado aprobado en: preparatoria ó bachillerato; normal básica, estudios técnicos o comerciales con secundaria terminada; estudios técnicos o comerciales con preparatoria terminada; normal de licenciatura; licenciatura o profesional; maestría o doctorado. Incluye a las personas que no especificaron los grados aprobados en los niveles señalados.',
                                                         null=True,
                                                         verbose_name='Población de 18 años y más con educación pos-básica')),
                ('P18YM_PB_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 18 a 130 años de edad que tienen como máxima escolaridad algún grado aprobado en: preparatoria ó bachillerato; normal básica, estudios técnicos o comerciales con secundaria terminada; estudios técnicos o comerciales con preparatoria terminada; normal de licenciatura; licenciatura o profesional; maestría o doctorado. Incluye a las personas que no especificaron los grados aprobados en los niveles señalados.',
                                                           null=True,
                                                           verbose_name='Población masculina de 18 años y más con educación pos-básica')),
                ('P18YM_PB_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 18 a 130 años de edad que tienen como máxima escolaridad algún grado aprobado en: preparatoria ó bachillerato; normal básica, estudios técnicos o comerciales con secundaria terminada; estudios técnicos o comerciales con preparatoria terminada; normal de licenciatura; licenciatura o profesional; maestría o doctorado. Incluye a las personas que no especificaron los grados aprobados en los niveles señalados.',
                                                           null=True,
                                                           verbose_name='Población femenina de 18 años y más con educación pos-básica')),
                ('GRAPROES', models.PositiveIntegerField(blank=True,
                                                         help_text='Resultado de dividir el monto de grados escolares aprobados por las personas de 15 a 130 años de edad entre las personas del mismo grupo de edad. Excluye a las personas que no especificaron los grados aprobados.',
                                                         null=True, verbose_name='Grado promedio de escolaridad')),
                ('GRAPROES_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Resultado de dividir el monto de grados escolares aprobados por las personas de 15 a 130 años de edad entre los hombres del mismo grupo de edad. Excluye a las personas que no especificaron los grados aprobados.',
                                                           null=True,
                                                           verbose_name='Grado promedio de escolaridad de la población masculina')),
                ('GRAPROES_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Resultado de dividir el monto de grados escolares aprobados por las personas de 15 a 130 años de edad entre las mujeres del mismo grupo de edad. Excluye a las personas que no especificaron los grados aprobados.',
                                                           null=True,
                                                           verbose_name='Grado promedio de escolaridad de la población femenina')),
                ('PEA', models.PositiveIntegerField(blank=True,
                                                    help_text='Personas de 12 años y más que trabajaron; tenían trabajo pero no trabajaron o; buscaron trabajo en la semana de referencia.',
                                                    null=True, verbose_name='Población económicamente activa')),
                ('PEA_M', models.PositiveIntegerField(blank=True,
                                                      help_text='Hombres de 12 años y más que trabajaron; tenían trabajo pero no trabajaron o; buscaron trabajo en la semana de referencia.',
                                                      null=True,
                                                      verbose_name='Población masculina económicamente activa')),
                ('PEA_F', models.PositiveIntegerField(blank=True,
                                                      help_text='Mujeres de 12 años y más que trabajaron; tenían trabajo pero no trabajaron o; buscaron trabajo en la semana de referencia.',
                                                      null=True,
                                                      verbose_name='Población femenina económicamente activa')),
                ('PE_INAC', models.PositiveIntegerField(blank=True,
                                                        help_text='Personas de 12 años y más pensionadas o jubiladas, estudiantes, dedicadas a los quehaceres del hogar, que tienen alguna limitación física o mental permanente que le impide trabajar.',
                                                        null=True, verbose_name='Población no económicamente activa')),
                ('PE_INAC_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Hombres de 12 años y más pensionadas o jubiladas, estudiantes, dedicadas a los quehaceres del hogar, que tienen alguna limitación física o mental permanente que le impide trabajar.',
                                                          null=True,
                                                          verbose_name='Población masculina no económicamente activa')),
                ('PE_INAC_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Mujeres de 12 años y más pensionadas o jubiladas, estudiantes, dedicadas a los quehaceres del hogar, que tienen alguna limitación física o mental permanente que le impide trabajar.',
                                                          null=True,
                                                          verbose_name='Población femenina no económicamente activa')),
                ('POCUPADA', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 12 a 130 años de edad que trabajaron o que no trabajaron pero sí tenían trabajo en la semana de referencia.',
                                                         null=True, verbose_name='Población ocupada')),
                ('POCUPADA_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 12 a 130 años de edad que trabajaron o que no trabajaron pero sí tenían trabajo en la semana de referencia.',
                                                           null=True, verbose_name='Población masculina ocupada')),
                ('POCUPADA_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 12 a 130 años de edad que trabajaron o que no trabajaron pero sí tenían trabajo en la semana de referencia.',
                                                           null=True, verbose_name='Población femenina ocupada')),
                ('PDESOCUP', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 12 a 130 años de edad que no tenían trabajo, pero buscaron trabajo en la semana de referencia.',
                                                         null=True, verbose_name='Población desocupada')),
                ('PDESOCUP_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 12 a 130 años de edad que no tenían trabajo, pero buscaron trabajo en la semana de referencia.',
                                                           null=True, verbose_name='Población masculina desocupada')),
                ('PDESOCUP_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 12 a 130 años de edad que no tenían trabajo, pero buscaron trabajo en la semana de referencia.',
                                                           null=True, verbose_name='Población femenina desocupada')),
                ('PSINDER', models.PositiveIntegerField(blank=True,
                                                        help_text='Total de personas que no tienen derecho a recibir servicios médicos en ninguna institución pública o privada.',
                                                        null=True,
                                                        verbose_name='Población sin derechohabiencia a servicios de salud')),
                ('PDER_SS', models.PositiveIntegerField(blank=True,
                                                        help_text='Total de personas que tienen derecho a recibir servicios médicos en alguna institución de salud pública o privada como: el Instituto Mexicano del Seguro Social (IMSS), el Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado (ISSSTE e ISSSTE estatal), Petróleos Mexicanos (PEMEX), la Secretaría de la Defensa Nacional (SEDENA) o la Secretaría de Marina Armada de México (SEMAR), el Seguro Popular o para una Nueva Generación (Incluye al Sistema de Protección Social en Salud que coordina la Secretaría de Salud) o en otra.',
                                                        null=True,
                                                        verbose_name='Población derechohabiente a servicios de salud')),
                ('PDER_IMSS', models.PositiveIntegerField(blank=True,
                                                          help_text='Total de personas que tienen derecho a recibir servicios médicos en el Instituto Mexicano del Seguro Social (IMSS).',
                                                          null=True,
                                                          verbose_name='Población derechohabiente del IMSS')),
                ('PDER_ISTE', models.PositiveIntegerField(blank=True,
                                                          help_text='Total de personas que tienen derecho a recibir servicios médicos en el Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado.',
                                                          null=True,
                                                          verbose_name='Población derechohabiente del ISSSTE')),
                ('PDER_ISTEE', models.PositiveIntegerField(blank=True,
                                                           help_text='Total de personas que tienen derecho a recibir servicios médicos en los institutos de seguridad social de los estados (ISSSET, ISSSEMyM, ISSSTEZAC, ISSSPEA o ISSSTESON).',
                                                           null=True,
                                                           verbose_name='Población derechohabiente del ISSSTE estatal')),
                ('PDER_SEGP', models.PositiveIntegerField(blank=True,
                                                          help_text='Total de personas que tienen derecho a recibir servicios médicos en la Secretaría de Salud, mediante el Sistema de Protección Social en Salud (Seguro Popular).',
                                                          null=True,
                                                          verbose_name='Población derechohabiente del seguro popular o Seguro Médico para una Nueva Generación')),
                ('P12YM_SOLT', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas de 12 a 130 años de edad que viven con su pareja en unión libre; casadas solo por el civil; casadas religiosamente o; casadas por el civil y religiosamente.',
                                                           null=True,
                                                           verbose_name='Población casada o unida de 12 años y más')),
                ('P12YM_CASA', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas de 12 a 130 años de edad que viven con su pareja en unión libre; casadas solo por el civil; casadas solo religiosamente o; casadas por el civil y religiosamente.',
                                                           null=True,
                                                           verbose_name='Población casada o unida de 12 años y más')),
                ('P12YM_SEPA', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas de 12 a 130 años de edad que están separadas, divorciadas o viudas.',
                                                           null=True,
                                                           verbose_name='Población que estuvo casada o unida de 12 años y más')),
                ('PCATOLICA',
                 models.PositiveIntegerField(blank=True, help_text='Personas con religión católica.', null=True,
                                             verbose_name='Población con religión católica')),
                ('PNCATOLICA', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con religiones Protestantes Históricas, Pentecostales, Neopentecostales, Iglesia del Dios Vivo, Columna y Apoyo de la Verdad, la Luz del Mundo, Cristianas, Evangélicas y Bíblicas diferentes de las Evangélicas.',
                                                           null=True,
                                                           verbose_name='Protestantes, Evangélicas y Bíblicas diferentes de evangélicas')),
                ('POTRAS_REL', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con religiones de Origen oriental, Judaico, Islámico, New Age, Escuelas esotéricas, Raíces étnicas, Espiritualistas, Ortodoxos, Otros movimientos religiosos y Cultos populares.',
                                                           null=True,
                                                           verbose_name='Población con otras religiones diferentes a las anteriores')),
                ('PSIN_RELIG', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas sin adscripción religiosa. Incluye ateísmo.',
                                                           null=True,
                                                           verbose_name='Población con otras religiones diferentes a las anteriores')),
                ('TOTHOG', models.PositiveIntegerField(blank=True,
                                                       help_text='Hogares en viviendas particulares habitadas. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                       null=True, verbose_name='Total de hogares censales')),
                ('HOGJEF_M', models.PositiveIntegerField(blank=True,
                                                         help_text='Hogares en viviendas particulares habitadas donde el jefe es hombre. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                         null=True,
                                                         verbose_name='Hogares censales con jefatura masculina')),
                ('HOGJEF_F', models.PositiveIntegerField(blank=True,
                                                         help_text='Hogares en viviendas particulares habitadas donde el jefe es mujer. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                         null=True,
                                                         verbose_name='Hogares censales con jefatura femenina')),
                ('POBHOG', models.PositiveIntegerField(blank=True,
                                                       help_text='Personas en hogares censales. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                       null=True, verbose_name='Población en hogares censales')),
                ('PHOGJEF_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas en hogares censales donde el jefe es hombre. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                          null=True,
                                                          verbose_name='Población en hogares censales con jefatura masculina')),
                ('PHOGJEF_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas en hogares censales donde el jefe es mujer. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                          null=True,
                                                          verbose_name='Población en hogares censales con jefatura femenina')),
                ('VIVTOT', models.PositiveIntegerField(blank=True,
                                                       help_text='Viviendas particulares habitadas, deshabitadas, de uso temporal y colectivas. Incluye a las viviendas particulares sin información de sus ocupantes.',
                                                       null=True, verbose_name='Total de viviendas')),
                ('TVIVHAB', models.PositiveIntegerField(blank=True,
                                                        help_text='Viviendas particulares y colectivas habitadas. Incluye a las viviendas particulares sin información de sus ocupantes.',
                                                        null=True, verbose_name='Total de viviendas habitadas')),
                ('TVIVPAR', models.PositiveIntegerField(blank=True,
                                                        help_text='Viviendas particulares habitadas, deshabitadas y de uso temporal. Excluye a las viviendas particulares sin información de ocupantes.',
                                                        null=True, verbose_name='Total de viviendas particulares')),
                ('VIVPAR_HAB', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas de cualquier clase: casa independiente, departamento en edificio, vivienda o cuarto en vecindad, vivienda o cuarto de azotea, local no construido para habitación, vivienda móvil, refugios o clase no especificada. Excluye a las viviendas particulares sin información de ocupantes.',
                                                           null=True, verbose_name='Viviendas particulares habitadas')),
                ('TVIVPARHAB', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas de cualquier clase: casa independiente, departamento en edificio, vivienda o cuarto en vecindad, vivienda o cuarto de azotea, local no construido para habitación, vivienda móvil, refugios o clase no especificada. Incluye a las viviendas particulares sin información de ocupantes.',
                                                           null=True,
                                                           verbose_name='Total de viviendas particulares habitadas')),
                ('VIVPAR_DES',
                 models.PositiveIntegerField(blank=True, help_text='Viviendas particulares deshabitadas.', null=True,
                                             verbose_name='Viviendas particulares deshabitadas')),
                ('VIVPAR_UT',
                 models.PositiveIntegerField(blank=True, help_text='Viviendas particulares de uso temporal.', null=True,
                                             verbose_name='Viviendas particulares de uso temporal')),
                ('OCUPVIVPAR', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas que residen en viviendas particulares habitadas de cualquier clase: casa independiente, departamento en edificio, vivienda o cuarto en vecindad, vivienda o cuarto de azotea, local no construido para habitación, vivienda móvil, refugios o clase no especificada. Excluye la estimación del número de personas en viviendas particulares sin información de ocupantes.',
                                                           null=True,
                                                           verbose_name='Ocupantes en viviendas particulares habitadas')),
                ('PROM_OCUP', models.PositiveIntegerField(blank=True,
                                                          help_text='Resultado de dividir el número de personas que residen en viviendas particulares habitadas, entre el número de esas viviendas. Excluye la estimación del número de personas y de viviendas particulares sin información de ocupantes.',
                                                          null=True,
                                                          verbose_name='Promedio de ocupantes en viviendas particulares habitadas')),
                ('PRO_OCUP_C', models.PositiveIntegerField(blank=True,
                                                           help_text='Resultado de dividir el número de personas que residen en viviendas particulares habitadas entre el número de cuartos de esas viviendas. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Promedio de ocupantes por cuarto en viviendas particulares habitadas')),
                ('VPH_PISODT', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas con piso de cemento o firme, madera, mosaico u otro material. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con piso de material diferente de tierra')),
                ('VPH_PISOTI', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas con piso de tierra. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con piso de tierra')),
                ('VPH_1DOR', models.PositiveIntegerField(blank=True,
                                                         help_text='Viviendas particulares habitadas donde sólo uno de los cuartos se usa para dormir. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                         null=True,
                                                         verbose_name='Viviendas particulares habitadas con un dormitorio')),
                ('VPH_2YMASD', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que usan para dormir entre 2 y 25 cuartos.Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con dos dormitorios y más')),
                ('VPH_1CUART', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen un solo cuarto. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda. Excluye la estimación del número de personas y de viviendas particulares sin información de ocupantes.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con un solo cuarto')),
                ('VPH_2CUART', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen dos cuartos. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda. Excluye la estimación del número de personas y de viviendas particulares sin información de ocupantes.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con dos cuartos')),
                ('VPH_3YMASC', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen entre 3 y 25 cuartos. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con 3 cuartos y más')),
                ('VPH_C_ELEC', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen luz eléctrica. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que disponen de luz eléctrica')),
                ('VPH_S_ELEC', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que no tienen luz eléctrica. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que no disponen de luz eléctrica')),
                ('VPH_AGUADV', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen disponibilidad de agua entubada dentro de la vivienda, o fuera de la vivienda pero dentro del terreno. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que disponen de agua entubada en el ámbito de la vivienda')),
                ('VPH_AGUAFV', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen disponibilidad de agua de una llave pública o hidrante, de otra vivienda, de pipa, de pozo, río, arroyo, lago u otro. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que no disponen de agua entubada en el ámbito de la vivienda')),
                ('VPH_EXCSA', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen excusado, retrete, sanitario, letrina u hoyo negro. Excluye la estimación del número de personas y de viviendas particulares sin información de ocupantes.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de excusado o sanitario')),
                ('VPH_DRENAJ', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen drenaje conectado a la red pública, fosa séptica, barranca, grieta, río, lago o mar. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que disponen de drenaje')),
                ('VPH_NODREN', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que no tienen drenaje. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que no disponen de drenaje')),
                ('VPH_C_SERV', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen luz eléctrica, agua entubada dentro o fuera de la vivienda, pero dentro del terreno, así como drenaje. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que disponen de luz eléctrica, agua entubada de la red pública y drenaje')),
                ('VPH_SNBIEN', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que no disponen de radio, televisión, refrigerador, lavadora, automóvil, computadora, teléfono fijo, celular ni internet. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas sin ningún bien')),
                ('VPH_RADIO', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen radio. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a   que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de radio')),
                ('VPH_TV', models.PositiveIntegerField(blank=True,
                                                       help_text='Viviendas particulares habitadas que tienen televisor. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                       null=True,
                                                       verbose_name='Viviendas particulares habitadas que disponen de televisor')),
                ('VPH_REFRI', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen refrigerador. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de refrigerador')),
                ('VPH_LAVAD', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen lavadora. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda..',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de lavadora')),
                ('VPH_AUTOM', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen automóvil o camioneta. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de automóvil o camioneta')),
                ('VPH_PC', models.PositiveIntegerField(blank=True,
                                                       help_text='Viviendas particulares habitadas que tienen computadora. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                       null=True,
                                                       verbose_name='Viviendas particulares habitadas que disponen de computadora')),
                ('VPH_TELEF', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen línea telefónica fija. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de línea telefónica fija')),
                ('VPH_CEL', models.PositiveIntegerField(blank=True,
                                                        help_text='Viviendas particulares habitadas que tienen teléfono celular. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                        null=True,
                                                        verbose_name='Viviendas particulares habitadas que disponen de teléfono celular')),
                ('VPH_INTER', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen servicio de internet. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de internet')),
                ('cvegeo', models.CharField(max_length=2)),
                ('nomgeo', models.CharField(max_length=80)),
                ],
            options={
                'ordering': ['nomgeo'],
                },
            ),
        migrations.CreateModel(
            name='Localidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('cve_ent', models.CharField(max_length=2)),
                ('POBTOT', models.PositiveIntegerField(blank=True,
                                                       help_text='Total de personas que residen habitualmente en el país, entidad federativa, municipio y localidad. Incluye la estimación del número de personas en viviendas particulares sin información de ocupantes. Incluye a la población que no especificó su edad.',
                                                       null=True, verbose_name='Población total')),
                ('POBMAS', models.PositiveIntegerField(blank=True,
                                                       help_text='Total de hombres que residen habitualmente en el país, entidad federativa, municipio y localidad. Incluye la estimación del número de hombres en viviendas particulares sin información de ocupantes. Incluye a la población que no especificó su edad.',
                                                       null=True, verbose_name='Población masculina')),
                ('POBFEM', models.PositiveIntegerField(blank=True,
                                                       help_text='Total de mujeres que residen habitualmente en el país, entidad federativa, municipio y localidad. Incluye la estimación del número de mujeres en viviendas particulares sin información de ocupantes. Incluye a la población que no especificó su edad.',
                                                       null=True, verbose_name='Población femenina')),
                ('P_0A2',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 0 a 2 años de edad.', null=True,
                                             verbose_name='Población de 0 a 2 años')),
                ('P_0A2_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 0 a 2 años de edad.', null=True,
                                             verbose_name='Población masculina de 0 a 2 años')),
                ('P_0A2_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 0 a 2 años de edad.', null=True,
                                             verbose_name='Población femenina de 0 a 2 años')),
                ('P_3YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 3 a 130 años de edad.', null=True,
                                             verbose_name='Población de 3 años y más')),
                ('P_3YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 3 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 3 años y más')),
                ('P_3YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 3 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 3 años y más ')),
                ('P_5YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 5 a 130 años de edad.', null=True,
                                             verbose_name='Población de 5 años y más')),
                ('P_5YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 5 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 5 años y más')),
                ('P_5YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 5 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 5 años y más ')),
                ('P_12YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 12 a 130 años de edad.', null=True,
                                             verbose_name='Población de 12 años y más')),
                ('P_12YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 12 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 12 años y más')),
                ('P_12YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 12 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 12 años y más ')),
                ('P_15YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 15 a 130 años de edad.', null=True,
                                             verbose_name='Población de 15 años y más')),
                ('P_15YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 15 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 15 años y más')),
                ('P_15YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 15 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 15 años y más ')),
                ('P_18YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 18 a 130 años de edad.', null=True,
                                             verbose_name='Población de 18 años y más')),
                ('P_18YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 18 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 18 años y más')),
                ('P_18YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 18 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 18 años y más ')),
                ('P_3A5',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 3 a 5 años de edad.', null=True,
                                             verbose_name='Población de 3 a 5 años')),
                ('P_3A5_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 3 a 5 años de edad.', null=True,
                                             verbose_name='Población masculina de 3 a 5 años')),
                ('P_3A5_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 3 a 5 años de edad.', null=True,
                                             verbose_name='Población femenina de 3 a 5 años')),
                ('P_6A11',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 6 a 11 años de edad.', null=True,
                                             verbose_name='Población de 6 a 11 años')),
                ('P_6A11_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 6 a 11 años de edad.', null=True,
                                             verbose_name='Población masculina de 6 a 11 años')),
                ('P_6A11_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 6 a 11 años de edad.', null=True,
                                             verbose_name='Población femenina de 6 a 11 años')),
                ('P_8A14',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 8 a 14 años de edad.', null=True,
                                             verbose_name='Población de 8 a 14 años')),
                ('P_8A14_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 8 a 14 años de edad.', null=True,
                                             verbose_name='Población masculina de 8 a 14 años')),
                ('P_8A14_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 8 a 14 años de edad.', null=True,
                                             verbose_name='Población femenina de 8 a 14 años')),
                ('P_12A14',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 12 a 14 años de edad.', null=True,
                                             verbose_name='Población de 12 a 14 años')),
                ('P_12A14_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 12 a 14 años de edad.', null=True,
                                             verbose_name='Población masculina de 12 a 14 años')),
                ('P_12A14_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 12 a 14 años de edad.', null=True,
                                             verbose_name='Población femenina de 12 a 14 años')),
                ('P_15A17',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 15 a 17 años de edad.', null=True,
                                             verbose_name='Población de 15 a 17 años')),
                ('P_15A17_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 15 a 17 años de edad.', null=True,
                                             verbose_name='Población masculina de 15 a 17 años')),
                ('P_15A17_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 15 a 17 años de edad.', null=True,
                                             verbose_name='Población femenina de 15 a 17 años')),
                ('P_18A24',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 18 a 24 años de edad.', null=True,
                                             verbose_name='Población de 18 a 24 años')),
                ('P_18A24_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 18 a 24 años de edad.', null=True,
                                             verbose_name='Población masculina de 18 a 24 años')),
                ('P_18A24_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 18 a 24 años de edad.', null=True,
                                             verbose_name='Población femenina de 18 a 24 años')),
                ('P_15A49',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 15 a 49 años de edad.', null=True,
                                             verbose_name='Población de 15 a 49 años')),
                ('P_15A49_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 15 a 49 años de edad.', null=True,
                                             verbose_name='Población masculina de 15 a 49 años')),
                ('P_15A49_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 15 a 49 años de edad.', null=True,
                                             verbose_name='Población femenina de 15 a 49 años')),
                ('P_60YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 60 a 130 años de edad.', null=True,
                                             verbose_name='Población de 60 años y más')),
                ('P_60YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 60 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 60 años y más')),
                ('P_60YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 60 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 60 años y más')),
                ('REL_H_M', models.PositiveIntegerField(blank=True,
                                                        help_text='Resultado de dividir el total de hombres entre el total de mujeres y multiplicarlo por cien. Indica el número de hombres por cada 100 mujeres..',
                                                        null=True, verbose_name='Relación hombres-mujeres')),
                ('POB0_14',
                 models.PositiveIntegerField(blank=True, help_text='Personas de cero a 14 años de edad.', null=True,
                                             verbose_name='Población de cero a 14 años')),
                ('POB15_64',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 15 a 64 años de edad.', null=True,
                                             verbose_name='Población de 15 a 64 años')),
                ('POB65_MAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 65 a 130 años de edad.', null=True,
                                             verbose_name='Población de 65 años y más')),
                ('PROM_HNV', models.PositiveIntegerField(blank=True,
                                                         help_text='Resultado de dividir el total de hijos nacidos vivos de las mujeres de 12 a 130 años de edad, entre el total de mujeres del mismo grupo de edad. Excluye a las mujeres que no especificaron el número de hijos..',
                                                         null=True, verbose_name='Promedio de hijos nacidos vivos')),
                ('PNACENT',
                 models.PositiveIntegerField(blank=True, help_text='Personas nacidas en la misma entidad federativa.',
                                             null=True, verbose_name='Población nacida en la entidad')),
                ('PNACENT_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres nacidos en la misma entidad federativa.',
                                             null=True, verbose_name='Población masculina nacida en la entidad')),
                ('PNACENT_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres nacidas en la misma entidad federativa.',
                                             null=True, verbose_name='Población femenina nacida en la entidad')),
                ('PNACOE',
                 models.PositiveIntegerField(blank=True, help_text='Personas nacidas en otra entidad federativa.',
                                             null=True, verbose_name='Población nacida en otra entidad')),
                ('PNACOE_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres nacidos en otra entidad federativa.',
                                             null=True, verbose_name='Población masculina nacida en otra entidad')),
                ('PNACOE_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres nacidas en otra entidad federativa.',
                                             null=True, verbose_name='Población femenina nacida en otra entidad')),
                ('PRES2005', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 5 a 130 años de edad que en los años 2005 y 2010 residían en la misma entidad federativa.',
                                                         null=True,
                                                         verbose_name='Población de 5 años y más residente en la entidad en junio de 2005')),
                ('PRES2005_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 5 a 130 años de edad que en los años 2005 y 2010 residían en la misma entidad federativa.',
                                                           null=True,
                                                           verbose_name='Población masculina de 5 años y más residente en la entidad en junio de 2005')),
                ('PRES2005_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 5 a 130 años de edad que en los años 2005 y 2010 residían en la misma entidad federativa.',
                                                           null=True,
                                                           verbose_name='Población femenina de 5 años y más residente en la entidad en junio de 2005')),
                ('PRESOE05', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 5 a 130 años de edad que en el año 2005 residían en otra entidad federativa.',
                                                         null=True,
                                                         verbose_name='Población de 5 años y más residente en otra entidad en junio de 2005')),
                ('PRESOE05_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 5 a 130 años de edad que en el año 2005 residían en otra entidad federativa.',
                                                           null=True,
                                                           verbose_name='Población masculina de 5 años y más residente en otra entidad en junio de 2005')),
                ('PRESOE05_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 5 a 130 años de edad que en el año 2005 residían en otra entidad federativa.',
                                                           null=True,
                                                           verbose_name='Población femenina de 5 años y más residente en otra entidad en junio de 2005')),
                ('P3YM_HLI', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 3 a 130 años de edad que hablan alguna lengua indígena.',
                                                         null=True,
                                                         verbose_name='Población de 3 años y más que habla alguna lengua indígena')),
                ('P3YM_HLI_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 3 a 130 años de edad que hablan alguna lengua indígena.',
                                                           null=True,
                                                           verbose_name='Población masculiina de 3 años y más que habla alguna lengua indígena')),
                ('P3YM_HLI_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 3 a 130 años de edad que hablan alguna lengua indígena.',
                                                           null=True,
                                                           verbose_name='Población femenina de 3 años y más que habla alguna lengua indígena')),
                ('P3HLINHE', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 3 a 130 años de edad que hablan alguna lengua indígena y además no hablan español.',
                                                         null=True,
                                                         verbose_name='Población de 3 años y más que habla alguna lengua indígena y no habla español')),
                ('P3HLINHE_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 3 a 130 años de edad que hablan alguna lengua indígena y además no hablan español.',
                                                           null=True,
                                                           verbose_name='Población masculina de 3 años y más que habla alguna lengua indígena y no habla español')),
                ('P3HLINHE_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 3 a 130 años de edad que hablan alguna lengua indígena y además no hablan español.',
                                                           null=True,
                                                           verbose_name='Población femeninade 3 años y más que habla alguna lengua indígena y no habla español')),
                ('P3HLI_HE', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 3 a 130 años de edad que hablan alguna lengua indígena y además hablan español.',
                                                         null=True,
                                                         verbose_name='Población de 3 años y más que habla alguna lengua indígena y habla español')),
                ('P3HLI_HE_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 3 a 130 años de edad que hablan alguna lengua indígena y además hablan español.',
                                                           null=True,
                                                           verbose_name='Población masculina de 3 años y más que habla alguna lengua indígena y habla español')),
                ('P3HLI_HE_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 3 a 130 años de edad que hablan alguna lengua indígena y además hablan español.',
                                                           null=True,
                                                           verbose_name='Población femenina de 3 años y más que habla alguna lengua indígena y habla español')),
                ('P5_HLI', models.PositiveIntegerField(blank=True,
                                                       help_text='Personas de 5 años y más que hablan alguna lengua indígena.',
                                                       null=True,
                                                       verbose_name='Población de 5 años y más que habla alguna lengua indígena')),
                ('P5_HLI_NHE', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas de 5 años y más que hablan alguna lengua indígena y no hablan español..',
                                                           null=True,
                                                           verbose_name='Población de 5 años y más que habla alguna lengua indígena y no habla español')),
                ('P5_HLI_HE', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 5 años y más que hablan alguna lengua indígena y que hablan español..',
                                                          null=True,
                                                          verbose_name='Población de 5 años y más que habla alguna lengua indígena y habla español')),
                ('PHOG_IND', models.PositiveIntegerField(blank=True,
                                                         help_text='Total de personas que forman hogares censales donde el jefe del hogar o su cónyuge hablan alguna lengua indígena.',
                                                         null=True,
                                                         verbose_name='Población en hogares censales indígenas')),
                ('PCON_LIM', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas que tienen dificultad para el desempeño y/o realización de tareas en la vida cotidiana.',
                                                         null=True,
                                                         verbose_name='Población con limitación en la actividad')),
                ('PCLIM_MOT', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas con dificultad para caminar o moverse, subir o bajar.',
                                                          null=True,
                                                          verbose_name='Población con limitación para caminar o moverse, subir o bajar')),
                ('PCLIM_VIS', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas con dificultad para ver, aún cuando usen lentes.',
                                                          null=True,
                                                          verbose_name='Población con limitación para ver, aún usando lentes')),
                ('PCLIM_LENG', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con dificultad para comunicarse con los demás o que tienen limitaciones para la recepción y producción de mensajes para hacerse entender a través del lenguaje, signos y símbolos..',
                                                           null=True,
                                                           verbose_name='Población con limitación para hablar, comunicarse o conversars')),
                ('PCLIM_AUD', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas con dificultad para escuchar, aún usando aparato auditivo.',
                                                          null=True,
                                                          verbose_name='Población con limitación para escuchar')),
                ('PCLIM_MOT2', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con dificultad para bañarse, vestirse y/o comer.',
                                                           null=True,
                                                           verbose_name='Población con limitación para vestirse, bañarse o comer')),
                ('PCLIM_MEN', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas con dificultad para mantener un nivel de atención en cosas sencillas.',
                                                          null=True,
                                                          verbose_name='Población con limitación para poner atención o aprender cosas sencillas')),
                ('PCLIM_MEN2', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con dificultad o con alguna limitación mental.',
                                                           null=True, verbose_name='Población con limitación mental')),
                ('PSIN_LIM', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas que no tienen dificultad para el desempeño y/o realización de tareas en la vida cotidiana.',
                                                         null=True,
                                                         verbose_name='Población sin limitación en la actividad')),
                ('P3A5_NOA', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 3 a 5 años de edad que no van a la escuela.',
                                                         null=True,
                                                         verbose_name='Población de 3 a 5 años que no asiste a la escuela')),
                ('P3A5_NOA_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 3 a 5 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población masculina de 3 a 5 años que no asiste a la escuela')),
                ('P3A5_NOA_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 3 a 5 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población femenina de 3 a 5 años que no asiste a la escuela')),
                ('P6A11_NOA', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 6 a 11 años de edad que no van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población de 6 a 11 años que no asiste a la escuela')),
                ('P6A11_NOAM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 6 a 11 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población masculina de 6 a 11 años que no asiste a la escuela')),
                ('P6A11_NOAF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 6 a 11 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población femenina de 6 a 11 años que no asiste a la escuela')),
                ('P12A14NOA', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 12 a 14 años de edad que no van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población de 12 a 14 años que no asiste a la escuela')),
                ('P12A14NOAM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 12 a 14 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población masculina de 12 a 14 años que no asiste a la escuela')),
                ('P12A14NOAF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 12 a 14 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población femenina de 12 a 14 años que no asiste a la escuela')),
                ('P15A17A', models.PositiveIntegerField(blank=True,
                                                        help_text='Personas de 15 a 17 años de edad que van a la escuela.',
                                                        null=True,
                                                        verbose_name='Población de 15 a 17 años que asiste a la escuela')),
                ('P15A17A_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Hombres de 15 a 17 años de edad que van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población masculina de 15 a 17 años que asiste a la escuela')),
                ('P15A17A_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Mujeres de 15 a 17 años de edad que van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población femenina de 15 a 17 años que asiste a la escuela')),
                ('P18A24A', models.PositiveIntegerField(blank=True,
                                                        help_text='Personas de 18 a 24 años de edad que van a la escuela.',
                                                        null=True,
                                                        verbose_name='Población de 18 a 24 años que asiste a la escuela')),
                ('P18A24A_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Hombres de 18 a 24 años de edad que van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población masculina de 18 a 24 años que asiste a la escuela')),
                ('P18A24A_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Mujeres de 18 a 24 años de edad que van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población femenina de 18 a 24 años que asiste a la escuela')),
                ('P8A14AN', models.PositiveIntegerField(blank=True,
                                                        help_text='Personas de 8 a 14 años de edad que no saben leer y escribir.',
                                                        null=True,
                                                        verbose_name='Población de 8 a 14 años que no saben leer y escribir')),
                ('P8A14AN_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Hombres de 8 a 14 años de edad que no saben leer y escribir.',
                                                          null=True,
                                                          verbose_name='Población mascuina de 8 a 14 años que no saben leer y escribir')),
                ('P8A14AN_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Mujeres de 8 a 14 años de edad que no saben leer y escribir.',
                                                          null=True,
                                                          verbose_name='Población femenina de 8 a 14 años que no saben leer y escribir')),
                ('P15YM_AN', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 15 a 130 años de edad que no saben leer ni escribir.',
                                                         null=True,
                                                         verbose_name='Población de 15 años y más analfabeta')),
                ('P15YM_AN_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que no saben leer ni escribir.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más analfabeta')),
                ('P15YM_AN_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que no saben leer ni escribir.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más analfabeta')),
                ('P15YM_SE', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 15 a 130 años de edad que no aprobaron ningún grado de escolaridad o que solo tienen nivel preescolar',
                                                         null=True,
                                                         verbose_name='Población de 15 años y más sin escolaridad')),
                ('P15YM_SE_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que no aprobaron ningún grado de escolaridad o que solo tienen nivel preescolar',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más sin escolaridad')),
                ('P15YM_SE_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que no aprobaron ningún grado de escolaridad o que solo tienen nivel preescolar',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más sin escolaridad')),
                ('P15PRI_IN', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 15 a 130 años de edad que tienen como máxima escolaridad hasta el quinto grado aprobado en primaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                          null=True,
                                                          verbose_name='Población de 15 años y más con primaria incompleta')),
                ('P15PRI_INM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que tienen como máxima escolaridad hasta el quinto grado aprobado en primaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más con primaria incompleta')),
                ('P15PRI_INF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que tienen como máxima escolaridad hasta el quinto grado aprobado en primaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más con primaria incompleta')),
                ('P15PRI_CO', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 15 a 130 años de edad que tienen como máxima escolaridad 6 grados aprobados en primaria.',
                                                          null=True,
                                                          verbose_name='Población de 15 años y más con primaria completa')),
                ('P15PRI_COM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que tienen como máxima escolaridad 6 grados aprobados en primaria.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más con primaria completa')),
                ('P15PRI_COF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que tienen como máxima escolaridad 6 grados aprobados en primaria.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más con primaria completa')),
                ('P15SEC_IN', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 15 a 130 años de edad que tienen como máxima escolaridad hasta segundo grado aprobado de secundaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                          null=True,
                                                          verbose_name='Población de 15 años y más con secundaria incompleta')),
                ('P15SEC_INM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que tienen como máxima escolaridad hasta segundo grado aprobado de secundaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más con secundaria incompleta')),
                ('P15SEC_INF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que tienen como máxima escolaridad hasta segundo grado aprobado de secundaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más con secundaria incompleta')),
                ('P15SEC_CO', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 15 a 130 años de edad que tienen como máxima escolaridad 3 grados aprobados en secundaria.',
                                                          null=True,
                                                          verbose_name='Población de 15 años y más con secundaria completa')),
                ('P15SEC_COM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que tienen como máxima escolaridad 3 grados aprobados en secundaria.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más con secundaria completa')),
                ('P15SEC_COF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que tienen como máxima escolaridad 3 grados aprobados en secundaria.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más con secundaria completa')),
                ('P18YM_PB', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 18 a 130 años de edad que tienen como máxima escolaridad algún grado aprobado en: preparatoria ó bachillerato; normal básica, estudios técnicos o comerciales con secundaria terminada; estudios técnicos o comerciales con preparatoria terminada; normal de licenciatura; licenciatura o profesional; maestría o doctorado. Incluye a las personas que no especificaron los grados aprobados en los niveles señalados.',
                                                         null=True,
                                                         verbose_name='Población de 18 años y más con educación pos-básica')),
                ('P18YM_PB_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 18 a 130 años de edad que tienen como máxima escolaridad algún grado aprobado en: preparatoria ó bachillerato; normal básica, estudios técnicos o comerciales con secundaria terminada; estudios técnicos o comerciales con preparatoria terminada; normal de licenciatura; licenciatura o profesional; maestría o doctorado. Incluye a las personas que no especificaron los grados aprobados en los niveles señalados.',
                                                           null=True,
                                                           verbose_name='Población masculina de 18 años y más con educación pos-básica')),
                ('P18YM_PB_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 18 a 130 años de edad que tienen como máxima escolaridad algún grado aprobado en: preparatoria ó bachillerato; normal básica, estudios técnicos o comerciales con secundaria terminada; estudios técnicos o comerciales con preparatoria terminada; normal de licenciatura; licenciatura o profesional; maestría o doctorado. Incluye a las personas que no especificaron los grados aprobados en los niveles señalados.',
                                                           null=True,
                                                           verbose_name='Población femenina de 18 años y más con educación pos-básica')),
                ('GRAPROES', models.PositiveIntegerField(blank=True,
                                                         help_text='Resultado de dividir el monto de grados escolares aprobados por las personas de 15 a 130 años de edad entre las personas del mismo grupo de edad. Excluye a las personas que no especificaron los grados aprobados.',
                                                         null=True, verbose_name='Grado promedio de escolaridad')),
                ('GRAPROES_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Resultado de dividir el monto de grados escolares aprobados por las personas de 15 a 130 años de edad entre los hombres del mismo grupo de edad. Excluye a las personas que no especificaron los grados aprobados.',
                                                           null=True,
                                                           verbose_name='Grado promedio de escolaridad de la población masculina')),
                ('GRAPROES_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Resultado de dividir el monto de grados escolares aprobados por las personas de 15 a 130 años de edad entre las mujeres del mismo grupo de edad. Excluye a las personas que no especificaron los grados aprobados.',
                                                           null=True,
                                                           verbose_name='Grado promedio de escolaridad de la población femenina')),
                ('PEA', models.PositiveIntegerField(blank=True,
                                                    help_text='Personas de 12 años y más que trabajaron; tenían trabajo pero no trabajaron o; buscaron trabajo en la semana de referencia.',
                                                    null=True, verbose_name='Población económicamente activa')),
                ('PEA_M', models.PositiveIntegerField(blank=True,
                                                      help_text='Hombres de 12 años y más que trabajaron; tenían trabajo pero no trabajaron o; buscaron trabajo en la semana de referencia.',
                                                      null=True,
                                                      verbose_name='Población masculina económicamente activa')),
                ('PEA_F', models.PositiveIntegerField(blank=True,
                                                      help_text='Mujeres de 12 años y más que trabajaron; tenían trabajo pero no trabajaron o; buscaron trabajo en la semana de referencia.',
                                                      null=True,
                                                      verbose_name='Población femenina económicamente activa')),
                ('PE_INAC', models.PositiveIntegerField(blank=True,
                                                        help_text='Personas de 12 años y más pensionadas o jubiladas, estudiantes, dedicadas a los quehaceres del hogar, que tienen alguna limitación física o mental permanente que le impide trabajar.',
                                                        null=True, verbose_name='Población no económicamente activa')),
                ('PE_INAC_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Hombres de 12 años y más pensionadas o jubiladas, estudiantes, dedicadas a los quehaceres del hogar, que tienen alguna limitación física o mental permanente que le impide trabajar.',
                                                          null=True,
                                                          verbose_name='Población masculina no económicamente activa')),
                ('PE_INAC_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Mujeres de 12 años y más pensionadas o jubiladas, estudiantes, dedicadas a los quehaceres del hogar, que tienen alguna limitación física o mental permanente que le impide trabajar.',
                                                          null=True,
                                                          verbose_name='Población femenina no económicamente activa')),
                ('POCUPADA', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 12 a 130 años de edad que trabajaron o que no trabajaron pero sí tenían trabajo en la semana de referencia.',
                                                         null=True, verbose_name='Población ocupada')),
                ('POCUPADA_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 12 a 130 años de edad que trabajaron o que no trabajaron pero sí tenían trabajo en la semana de referencia.',
                                                           null=True, verbose_name='Población masculina ocupada')),
                ('POCUPADA_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 12 a 130 años de edad que trabajaron o que no trabajaron pero sí tenían trabajo en la semana de referencia.',
                                                           null=True, verbose_name='Población femenina ocupada')),
                ('PDESOCUP', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 12 a 130 años de edad que no tenían trabajo, pero buscaron trabajo en la semana de referencia.',
                                                         null=True, verbose_name='Población desocupada')),
                ('PDESOCUP_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 12 a 130 años de edad que no tenían trabajo, pero buscaron trabajo en la semana de referencia.',
                                                           null=True, verbose_name='Población masculina desocupada')),
                ('PDESOCUP_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 12 a 130 años de edad que no tenían trabajo, pero buscaron trabajo en la semana de referencia.',
                                                           null=True, verbose_name='Población femenina desocupada')),
                ('PSINDER', models.PositiveIntegerField(blank=True,
                                                        help_text='Total de personas que no tienen derecho a recibir servicios médicos en ninguna institución pública o privada.',
                                                        null=True,
                                                        verbose_name='Población sin derechohabiencia a servicios de salud')),
                ('PDER_SS', models.PositiveIntegerField(blank=True,
                                                        help_text='Total de personas que tienen derecho a recibir servicios médicos en alguna institución de salud pública o privada como: el Instituto Mexicano del Seguro Social (IMSS), el Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado (ISSSTE e ISSSTE estatal), Petróleos Mexicanos (PEMEX), la Secretaría de la Defensa Nacional (SEDENA) o la Secretaría de Marina Armada de México (SEMAR), el Seguro Popular o para una Nueva Generación (Incluye al Sistema de Protección Social en Salud que coordina la Secretaría de Salud) o en otra.',
                                                        null=True,
                                                        verbose_name='Población derechohabiente a servicios de salud')),
                ('PDER_IMSS', models.PositiveIntegerField(blank=True,
                                                          help_text='Total de personas que tienen derecho a recibir servicios médicos en el Instituto Mexicano del Seguro Social (IMSS).',
                                                          null=True,
                                                          verbose_name='Población derechohabiente del IMSS')),
                ('PDER_ISTE', models.PositiveIntegerField(blank=True,
                                                          help_text='Total de personas que tienen derecho a recibir servicios médicos en el Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado.',
                                                          null=True,
                                                          verbose_name='Población derechohabiente del ISSSTE')),
                ('PDER_ISTEE', models.PositiveIntegerField(blank=True,
                                                           help_text='Total de personas que tienen derecho a recibir servicios médicos en los institutos de seguridad social de los estados (ISSSET, ISSSEMyM, ISSSTEZAC, ISSSPEA o ISSSTESON).',
                                                           null=True,
                                                           verbose_name='Población derechohabiente del ISSSTE estatal')),
                ('PDER_SEGP', models.PositiveIntegerField(blank=True,
                                                          help_text='Total de personas que tienen derecho a recibir servicios médicos en la Secretaría de Salud, mediante el Sistema de Protección Social en Salud (Seguro Popular).',
                                                          null=True,
                                                          verbose_name='Población derechohabiente del seguro popular o Seguro Médico para una Nueva Generación')),
                ('P12YM_SOLT', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas de 12 a 130 años de edad que viven con su pareja en unión libre; casadas solo por el civil; casadas religiosamente o; casadas por el civil y religiosamente.',
                                                           null=True,
                                                           verbose_name='Población casada o unida de 12 años y más')),
                ('P12YM_CASA', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas de 12 a 130 años de edad que viven con su pareja en unión libre; casadas solo por el civil; casadas solo religiosamente o; casadas por el civil y religiosamente.',
                                                           null=True,
                                                           verbose_name='Población casada o unida de 12 años y más')),
                ('P12YM_SEPA', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas de 12 a 130 años de edad que están separadas, divorciadas o viudas.',
                                                           null=True,
                                                           verbose_name='Población que estuvo casada o unida de 12 años y más')),
                ('PCATOLICA',
                 models.PositiveIntegerField(blank=True, help_text='Personas con religión católica.', null=True,
                                             verbose_name='Población con religión católica')),
                ('PNCATOLICA', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con religiones Protestantes Históricas, Pentecostales, Neopentecostales, Iglesia del Dios Vivo, Columna y Apoyo de la Verdad, la Luz del Mundo, Cristianas, Evangélicas y Bíblicas diferentes de las Evangélicas.',
                                                           null=True,
                                                           verbose_name='Protestantes, Evangélicas y Bíblicas diferentes de evangélicas')),
                ('POTRAS_REL', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con religiones de Origen oriental, Judaico, Islámico, New Age, Escuelas esotéricas, Raíces étnicas, Espiritualistas, Ortodoxos, Otros movimientos religiosos y Cultos populares.',
                                                           null=True,
                                                           verbose_name='Población con otras religiones diferentes a las anteriores')),
                ('PSIN_RELIG', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas sin adscripción religiosa. Incluye ateísmo.',
                                                           null=True,
                                                           verbose_name='Población con otras religiones diferentes a las anteriores')),
                ('TOTHOG', models.PositiveIntegerField(blank=True,
                                                       help_text='Hogares en viviendas particulares habitadas. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                       null=True, verbose_name='Total de hogares censales')),
                ('HOGJEF_M', models.PositiveIntegerField(blank=True,
                                                         help_text='Hogares en viviendas particulares habitadas donde el jefe es hombre. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                         null=True,
                                                         verbose_name='Hogares censales con jefatura masculina')),
                ('HOGJEF_F', models.PositiveIntegerField(blank=True,
                                                         help_text='Hogares en viviendas particulares habitadas donde el jefe es mujer. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                         null=True,
                                                         verbose_name='Hogares censales con jefatura femenina')),
                ('POBHOG', models.PositiveIntegerField(blank=True,
                                                       help_text='Personas en hogares censales. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                       null=True, verbose_name='Población en hogares censales')),
                ('PHOGJEF_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas en hogares censales donde el jefe es hombre. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                          null=True,
                                                          verbose_name='Población en hogares censales con jefatura masculina')),
                ('PHOGJEF_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas en hogares censales donde el jefe es mujer. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                          null=True,
                                                          verbose_name='Población en hogares censales con jefatura femenina')),
                ('VIVTOT', models.PositiveIntegerField(blank=True,
                                                       help_text='Viviendas particulares habitadas, deshabitadas, de uso temporal y colectivas. Incluye a las viviendas particulares sin información de sus ocupantes.',
                                                       null=True, verbose_name='Total de viviendas')),
                ('TVIVHAB', models.PositiveIntegerField(blank=True,
                                                        help_text='Viviendas particulares y colectivas habitadas. Incluye a las viviendas particulares sin información de sus ocupantes.',
                                                        null=True, verbose_name='Total de viviendas habitadas')),
                ('TVIVPAR', models.PositiveIntegerField(blank=True,
                                                        help_text='Viviendas particulares habitadas, deshabitadas y de uso temporal. Excluye a las viviendas particulares sin información de ocupantes.',
                                                        null=True, verbose_name='Total de viviendas particulares')),
                ('VIVPAR_HAB', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas de cualquier clase: casa independiente, departamento en edificio, vivienda o cuarto en vecindad, vivienda o cuarto de azotea, local no construido para habitación, vivienda móvil, refugios o clase no especificada. Excluye a las viviendas particulares sin información de ocupantes.',
                                                           null=True, verbose_name='Viviendas particulares habitadas')),
                ('TVIVPARHAB', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas de cualquier clase: casa independiente, departamento en edificio, vivienda o cuarto en vecindad, vivienda o cuarto de azotea, local no construido para habitación, vivienda móvil, refugios o clase no especificada. Incluye a las viviendas particulares sin información de ocupantes.',
                                                           null=True,
                                                           verbose_name='Total de viviendas particulares habitadas')),
                ('VIVPAR_DES',
                 models.PositiveIntegerField(blank=True, help_text='Viviendas particulares deshabitadas.', null=True,
                                             verbose_name='Viviendas particulares deshabitadas')),
                ('VIVPAR_UT',
                 models.PositiveIntegerField(blank=True, help_text='Viviendas particulares de uso temporal.', null=True,
                                             verbose_name='Viviendas particulares de uso temporal')),
                ('OCUPVIVPAR', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas que residen en viviendas particulares habitadas de cualquier clase: casa independiente, departamento en edificio, vivienda o cuarto en vecindad, vivienda o cuarto de azotea, local no construido para habitación, vivienda móvil, refugios o clase no especificada. Excluye la estimación del número de personas en viviendas particulares sin información de ocupantes.',
                                                           null=True,
                                                           verbose_name='Ocupantes en viviendas particulares habitadas')),
                ('PROM_OCUP', models.PositiveIntegerField(blank=True,
                                                          help_text='Resultado de dividir el número de personas que residen en viviendas particulares habitadas, entre el número de esas viviendas. Excluye la estimación del número de personas y de viviendas particulares sin información de ocupantes.',
                                                          null=True,
                                                          verbose_name='Promedio de ocupantes en viviendas particulares habitadas')),
                ('PRO_OCUP_C', models.PositiveIntegerField(blank=True,
                                                           help_text='Resultado de dividir el número de personas que residen en viviendas particulares habitadas entre el número de cuartos de esas viviendas. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Promedio de ocupantes por cuarto en viviendas particulares habitadas')),
                ('VPH_PISODT', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas con piso de cemento o firme, madera, mosaico u otro material. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con piso de material diferente de tierra')),
                ('VPH_PISOTI', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas con piso de tierra. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con piso de tierra')),
                ('VPH_1DOR', models.PositiveIntegerField(blank=True,
                                                         help_text='Viviendas particulares habitadas donde sólo uno de los cuartos se usa para dormir. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                         null=True,
                                                         verbose_name='Viviendas particulares habitadas con un dormitorio')),
                ('VPH_2YMASD', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que usan para dormir entre 2 y 25 cuartos.Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con dos dormitorios y más')),
                ('VPH_1CUART', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen un solo cuarto. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda. Excluye la estimación del número de personas y de viviendas particulares sin información de ocupantes.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con un solo cuarto')),
                ('VPH_2CUART', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen dos cuartos. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda. Excluye la estimación del número de personas y de viviendas particulares sin información de ocupantes.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con dos cuartos')),
                ('VPH_3YMASC', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen entre 3 y 25 cuartos. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con 3 cuartos y más')),
                ('VPH_C_ELEC', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen luz eléctrica. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que disponen de luz eléctrica')),
                ('VPH_S_ELEC', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que no tienen luz eléctrica. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que no disponen de luz eléctrica')),
                ('VPH_AGUADV', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen disponibilidad de agua entubada dentro de la vivienda, o fuera de la vivienda pero dentro del terreno. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que disponen de agua entubada en el ámbito de la vivienda')),
                ('VPH_AGUAFV', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen disponibilidad de agua de una llave pública o hidrante, de otra vivienda, de pipa, de pozo, río, arroyo, lago u otro. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que no disponen de agua entubada en el ámbito de la vivienda')),
                ('VPH_EXCSA', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen excusado, retrete, sanitario, letrina u hoyo negro. Excluye la estimación del número de personas y de viviendas particulares sin información de ocupantes.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de excusado o sanitario')),
                ('VPH_DRENAJ', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen drenaje conectado a la red pública, fosa séptica, barranca, grieta, río, lago o mar. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que disponen de drenaje')),
                ('VPH_NODREN', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que no tienen drenaje. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que no disponen de drenaje')),
                ('VPH_C_SERV', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen luz eléctrica, agua entubada dentro o fuera de la vivienda, pero dentro del terreno, así como drenaje. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que disponen de luz eléctrica, agua entubada de la red pública y drenaje')),
                ('VPH_SNBIEN', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que no disponen de radio, televisión, refrigerador, lavadora, automóvil, computadora, teléfono fijo, celular ni internet. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas sin ningún bien')),
                ('VPH_RADIO', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen radio. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a   que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de radio')),
                ('VPH_TV', models.PositiveIntegerField(blank=True,
                                                       help_text='Viviendas particulares habitadas que tienen televisor. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                       null=True,
                                                       verbose_name='Viviendas particulares habitadas que disponen de televisor')),
                ('VPH_REFRI', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen refrigerador. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de refrigerador')),
                ('VPH_LAVAD', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen lavadora. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda..',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de lavadora')),
                ('VPH_AUTOM', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen automóvil o camioneta. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de automóvil o camioneta')),
                ('VPH_PC', models.PositiveIntegerField(blank=True,
                                                       help_text='Viviendas particulares habitadas que tienen computadora. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                       null=True,
                                                       verbose_name='Viviendas particulares habitadas que disponen de computadora')),
                ('VPH_TELEF', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen línea telefónica fija. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de línea telefónica fija')),
                ('VPH_CEL', models.PositiveIntegerField(blank=True,
                                                        help_text='Viviendas particulares habitadas que tienen teléfono celular. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                        null=True,
                                                        verbose_name='Viviendas particulares habitadas que disponen de teléfono celular')),
                ('VPH_INTER', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen servicio de internet. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de internet')),
                ('cvegeo', models.CharField(max_length=17)),
                ('nomgeo', models.CharField(max_length=120)),
                ('cve_mun', models.CharField(max_length=3)),
                ('cve_loc', models.CharField(max_length=4)),
                ('cve_ageb', models.CharField(max_length=4, null=True)),
                ('ambito',
                 models.PositiveSmallIntegerField(choices=[(0, 'No Aplica'), (1, 'Urbana'), (2, 'Rural')], null=True)),
                ('plano', models.PositiveSmallIntegerField(choices=[(0, 'No'), (1, 'Si'), (2, 'Croquis')], null=True)),
                ('area', models.CharField(blank=True, max_length=255, null=True)),
                ('ageb',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='loc_rurales',
                                   to='geo.ageb')),
                ('entidad',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='geo.entidad')),
                ],
            options={
                'ordering': ['nomgeo'],
                },
            ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('cve_ent', models.CharField(max_length=2)),
                ('POBTOT', models.PositiveIntegerField(blank=True,
                                                       help_text='Total de personas que residen habitualmente en el país, entidad federativa, municipio y localidad. Incluye la estimación del número de personas en viviendas particulares sin información de ocupantes. Incluye a la población que no especificó su edad.',
                                                       null=True, verbose_name='Población total')),
                ('POBMAS', models.PositiveIntegerField(blank=True,
                                                       help_text='Total de hombres que residen habitualmente en el país, entidad federativa, municipio y localidad. Incluye la estimación del número de hombres en viviendas particulares sin información de ocupantes. Incluye a la población que no especificó su edad.',
                                                       null=True, verbose_name='Población masculina')),
                ('POBFEM', models.PositiveIntegerField(blank=True,
                                                       help_text='Total de mujeres que residen habitualmente en el país, entidad federativa, municipio y localidad. Incluye la estimación del número de mujeres en viviendas particulares sin información de ocupantes. Incluye a la población que no especificó su edad.',
                                                       null=True, verbose_name='Población femenina')),
                ('P_0A2',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 0 a 2 años de edad.', null=True,
                                             verbose_name='Población de 0 a 2 años')),
                ('P_0A2_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 0 a 2 años de edad.', null=True,
                                             verbose_name='Población masculina de 0 a 2 años')),
                ('P_0A2_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 0 a 2 años de edad.', null=True,
                                             verbose_name='Población femenina de 0 a 2 años')),
                ('P_3YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 3 a 130 años de edad.', null=True,
                                             verbose_name='Población de 3 años y más')),
                ('P_3YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 3 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 3 años y más')),
                ('P_3YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 3 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 3 años y más ')),
                ('P_5YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 5 a 130 años de edad.', null=True,
                                             verbose_name='Población de 5 años y más')),
                ('P_5YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 5 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 5 años y más')),
                ('P_5YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 5 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 5 años y más ')),
                ('P_12YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 12 a 130 años de edad.', null=True,
                                             verbose_name='Población de 12 años y más')),
                ('P_12YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 12 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 12 años y más')),
                ('P_12YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 12 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 12 años y más ')),
                ('P_15YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 15 a 130 años de edad.', null=True,
                                             verbose_name='Población de 15 años y más')),
                ('P_15YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 15 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 15 años y más')),
                ('P_15YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 15 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 15 años y más ')),
                ('P_18YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 18 a 130 años de edad.', null=True,
                                             verbose_name='Población de 18 años y más')),
                ('P_18YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 18 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 18 años y más')),
                ('P_18YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 18 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 18 años y más ')),
                ('P_3A5',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 3 a 5 años de edad.', null=True,
                                             verbose_name='Población de 3 a 5 años')),
                ('P_3A5_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 3 a 5 años de edad.', null=True,
                                             verbose_name='Población masculina de 3 a 5 años')),
                ('P_3A5_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 3 a 5 años de edad.', null=True,
                                             verbose_name='Población femenina de 3 a 5 años')),
                ('P_6A11',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 6 a 11 años de edad.', null=True,
                                             verbose_name='Población de 6 a 11 años')),
                ('P_6A11_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 6 a 11 años de edad.', null=True,
                                             verbose_name='Población masculina de 6 a 11 años')),
                ('P_6A11_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 6 a 11 años de edad.', null=True,
                                             verbose_name='Población femenina de 6 a 11 años')),
                ('P_8A14',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 8 a 14 años de edad.', null=True,
                                             verbose_name='Población de 8 a 14 años')),
                ('P_8A14_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 8 a 14 años de edad.', null=True,
                                             verbose_name='Población masculina de 8 a 14 años')),
                ('P_8A14_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 8 a 14 años de edad.', null=True,
                                             verbose_name='Población femenina de 8 a 14 años')),
                ('P_12A14',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 12 a 14 años de edad.', null=True,
                                             verbose_name='Población de 12 a 14 años')),
                ('P_12A14_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 12 a 14 años de edad.', null=True,
                                             verbose_name='Población masculina de 12 a 14 años')),
                ('P_12A14_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 12 a 14 años de edad.', null=True,
                                             verbose_name='Población femenina de 12 a 14 años')),
                ('P_15A17',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 15 a 17 años de edad.', null=True,
                                             verbose_name='Población de 15 a 17 años')),
                ('P_15A17_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 15 a 17 años de edad.', null=True,
                                             verbose_name='Población masculina de 15 a 17 años')),
                ('P_15A17_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 15 a 17 años de edad.', null=True,
                                             verbose_name='Población femenina de 15 a 17 años')),
                ('P_18A24',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 18 a 24 años de edad.', null=True,
                                             verbose_name='Población de 18 a 24 años')),
                ('P_18A24_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 18 a 24 años de edad.', null=True,
                                             verbose_name='Población masculina de 18 a 24 años')),
                ('P_18A24_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 18 a 24 años de edad.', null=True,
                                             verbose_name='Población femenina de 18 a 24 años')),
                ('P_15A49',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 15 a 49 años de edad.', null=True,
                                             verbose_name='Población de 15 a 49 años')),
                ('P_15A49_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 15 a 49 años de edad.', null=True,
                                             verbose_name='Población masculina de 15 a 49 años')),
                ('P_15A49_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 15 a 49 años de edad.', null=True,
                                             verbose_name='Población femenina de 15 a 49 años')),
                ('P_60YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 60 a 130 años de edad.', null=True,
                                             verbose_name='Población de 60 años y más')),
                ('P_60YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 60 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 60 años y más')),
                ('P_60YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 60 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 60 años y más')),
                ('REL_H_M', models.PositiveIntegerField(blank=True,
                                                        help_text='Resultado de dividir el total de hombres entre el total de mujeres y multiplicarlo por cien. Indica el número de hombres por cada 100 mujeres..',
                                                        null=True, verbose_name='Relación hombres-mujeres')),
                ('POB0_14',
                 models.PositiveIntegerField(blank=True, help_text='Personas de cero a 14 años de edad.', null=True,
                                             verbose_name='Población de cero a 14 años')),
                ('POB15_64',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 15 a 64 años de edad.', null=True,
                                             verbose_name='Población de 15 a 64 años')),
                ('POB65_MAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 65 a 130 años de edad.', null=True,
                                             verbose_name='Población de 65 años y más')),
                ('PROM_HNV', models.PositiveIntegerField(blank=True,
                                                         help_text='Resultado de dividir el total de hijos nacidos vivos de las mujeres de 12 a 130 años de edad, entre el total de mujeres del mismo grupo de edad. Excluye a las mujeres que no especificaron el número de hijos..',
                                                         null=True, verbose_name='Promedio de hijos nacidos vivos')),
                ('PNACENT',
                 models.PositiveIntegerField(blank=True, help_text='Personas nacidas en la misma entidad federativa.',
                                             null=True, verbose_name='Población nacida en la entidad')),
                ('PNACENT_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres nacidos en la misma entidad federativa.',
                                             null=True, verbose_name='Población masculina nacida en la entidad')),
                ('PNACENT_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres nacidas en la misma entidad federativa.',
                                             null=True, verbose_name='Población femenina nacida en la entidad')),
                ('PNACOE',
                 models.PositiveIntegerField(blank=True, help_text='Personas nacidas en otra entidad federativa.',
                                             null=True, verbose_name='Población nacida en otra entidad')),
                ('PNACOE_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres nacidos en otra entidad federativa.',
                                             null=True, verbose_name='Población masculina nacida en otra entidad')),
                ('PNACOE_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres nacidas en otra entidad federativa.',
                                             null=True, verbose_name='Población femenina nacida en otra entidad')),
                ('PRES2005', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 5 a 130 años de edad que en los años 2005 y 2010 residían en la misma entidad federativa.',
                                                         null=True,
                                                         verbose_name='Población de 5 años y más residente en la entidad en junio de 2005')),
                ('PRES2005_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 5 a 130 años de edad que en los años 2005 y 2010 residían en la misma entidad federativa.',
                                                           null=True,
                                                           verbose_name='Población masculina de 5 años y más residente en la entidad en junio de 2005')),
                ('PRES2005_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 5 a 130 años de edad que en los años 2005 y 2010 residían en la misma entidad federativa.',
                                                           null=True,
                                                           verbose_name='Población femenina de 5 años y más residente en la entidad en junio de 2005')),
                ('PRESOE05', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 5 a 130 años de edad que en el año 2005 residían en otra entidad federativa.',
                                                         null=True,
                                                         verbose_name='Población de 5 años y más residente en otra entidad en junio de 2005')),
                ('PRESOE05_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 5 a 130 años de edad que en el año 2005 residían en otra entidad federativa.',
                                                           null=True,
                                                           verbose_name='Población masculina de 5 años y más residente en otra entidad en junio de 2005')),
                ('PRESOE05_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 5 a 130 años de edad que en el año 2005 residían en otra entidad federativa.',
                                                           null=True,
                                                           verbose_name='Población femenina de 5 años y más residente en otra entidad en junio de 2005')),
                ('P3YM_HLI', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 3 a 130 años de edad que hablan alguna lengua indígena.',
                                                         null=True,
                                                         verbose_name='Población de 3 años y más que habla alguna lengua indígena')),
                ('P3YM_HLI_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 3 a 130 años de edad que hablan alguna lengua indígena.',
                                                           null=True,
                                                           verbose_name='Población masculiina de 3 años y más que habla alguna lengua indígena')),
                ('P3YM_HLI_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 3 a 130 años de edad que hablan alguna lengua indígena.',
                                                           null=True,
                                                           verbose_name='Población femenina de 3 años y más que habla alguna lengua indígena')),
                ('P3HLINHE', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 3 a 130 años de edad que hablan alguna lengua indígena y además no hablan español.',
                                                         null=True,
                                                         verbose_name='Población de 3 años y más que habla alguna lengua indígena y no habla español')),
                ('P3HLINHE_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 3 a 130 años de edad que hablan alguna lengua indígena y además no hablan español.',
                                                           null=True,
                                                           verbose_name='Población masculina de 3 años y más que habla alguna lengua indígena y no habla español')),
                ('P3HLINHE_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 3 a 130 años de edad que hablan alguna lengua indígena y además no hablan español.',
                                                           null=True,
                                                           verbose_name='Población femeninade 3 años y más que habla alguna lengua indígena y no habla español')),
                ('P3HLI_HE', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 3 a 130 años de edad que hablan alguna lengua indígena y además hablan español.',
                                                         null=True,
                                                         verbose_name='Población de 3 años y más que habla alguna lengua indígena y habla español')),
                ('P3HLI_HE_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 3 a 130 años de edad que hablan alguna lengua indígena y además hablan español.',
                                                           null=True,
                                                           verbose_name='Población masculina de 3 años y más que habla alguna lengua indígena y habla español')),
                ('P3HLI_HE_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 3 a 130 años de edad que hablan alguna lengua indígena y además hablan español.',
                                                           null=True,
                                                           verbose_name='Población femenina de 3 años y más que habla alguna lengua indígena y habla español')),
                ('P5_HLI', models.PositiveIntegerField(blank=True,
                                                       help_text='Personas de 5 años y más que hablan alguna lengua indígena.',
                                                       null=True,
                                                       verbose_name='Población de 5 años y más que habla alguna lengua indígena')),
                ('P5_HLI_NHE', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas de 5 años y más que hablan alguna lengua indígena y no hablan español..',
                                                           null=True,
                                                           verbose_name='Población de 5 años y más que habla alguna lengua indígena y no habla español')),
                ('P5_HLI_HE', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 5 años y más que hablan alguna lengua indígena y que hablan español..',
                                                          null=True,
                                                          verbose_name='Población de 5 años y más que habla alguna lengua indígena y habla español')),
                ('PHOG_IND', models.PositiveIntegerField(blank=True,
                                                         help_text='Total de personas que forman hogares censales donde el jefe del hogar o su cónyuge hablan alguna lengua indígena.',
                                                         null=True,
                                                         verbose_name='Población en hogares censales indígenas')),
                ('PCON_LIM', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas que tienen dificultad para el desempeño y/o realización de tareas en la vida cotidiana.',
                                                         null=True,
                                                         verbose_name='Población con limitación en la actividad')),
                ('PCLIM_MOT', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas con dificultad para caminar o moverse, subir o bajar.',
                                                          null=True,
                                                          verbose_name='Población con limitación para caminar o moverse, subir o bajar')),
                ('PCLIM_VIS', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas con dificultad para ver, aún cuando usen lentes.',
                                                          null=True,
                                                          verbose_name='Población con limitación para ver, aún usando lentes')),
                ('PCLIM_LENG', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con dificultad para comunicarse con los demás o que tienen limitaciones para la recepción y producción de mensajes para hacerse entender a través del lenguaje, signos y símbolos..',
                                                           null=True,
                                                           verbose_name='Población con limitación para hablar, comunicarse o conversars')),
                ('PCLIM_AUD', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas con dificultad para escuchar, aún usando aparato auditivo.',
                                                          null=True,
                                                          verbose_name='Población con limitación para escuchar')),
                ('PCLIM_MOT2', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con dificultad para bañarse, vestirse y/o comer.',
                                                           null=True,
                                                           verbose_name='Población con limitación para vestirse, bañarse o comer')),
                ('PCLIM_MEN', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas con dificultad para mantener un nivel de atención en cosas sencillas.',
                                                          null=True,
                                                          verbose_name='Población con limitación para poner atención o aprender cosas sencillas')),
                ('PCLIM_MEN2', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con dificultad o con alguna limitación mental.',
                                                           null=True, verbose_name='Población con limitación mental')),
                ('PSIN_LIM', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas que no tienen dificultad para el desempeño y/o realización de tareas en la vida cotidiana.',
                                                         null=True,
                                                         verbose_name='Población sin limitación en la actividad')),
                ('P3A5_NOA', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 3 a 5 años de edad que no van a la escuela.',
                                                         null=True,
                                                         verbose_name='Población de 3 a 5 años que no asiste a la escuela')),
                ('P3A5_NOA_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 3 a 5 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población masculina de 3 a 5 años que no asiste a la escuela')),
                ('P3A5_NOA_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 3 a 5 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población femenina de 3 a 5 años que no asiste a la escuela')),
                ('P6A11_NOA', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 6 a 11 años de edad que no van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población de 6 a 11 años que no asiste a la escuela')),
                ('P6A11_NOAM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 6 a 11 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población masculina de 6 a 11 años que no asiste a la escuela')),
                ('P6A11_NOAF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 6 a 11 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población femenina de 6 a 11 años que no asiste a la escuela')),
                ('P12A14NOA', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 12 a 14 años de edad que no van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población de 12 a 14 años que no asiste a la escuela')),
                ('P12A14NOAM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 12 a 14 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población masculina de 12 a 14 años que no asiste a la escuela')),
                ('P12A14NOAF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 12 a 14 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población femenina de 12 a 14 años que no asiste a la escuela')),
                ('P15A17A', models.PositiveIntegerField(blank=True,
                                                        help_text='Personas de 15 a 17 años de edad que van a la escuela.',
                                                        null=True,
                                                        verbose_name='Población de 15 a 17 años que asiste a la escuela')),
                ('P15A17A_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Hombres de 15 a 17 años de edad que van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población masculina de 15 a 17 años que asiste a la escuela')),
                ('P15A17A_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Mujeres de 15 a 17 años de edad que van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población femenina de 15 a 17 años que asiste a la escuela')),
                ('P18A24A', models.PositiveIntegerField(blank=True,
                                                        help_text='Personas de 18 a 24 años de edad que van a la escuela.',
                                                        null=True,
                                                        verbose_name='Población de 18 a 24 años que asiste a la escuela')),
                ('P18A24A_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Hombres de 18 a 24 años de edad que van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población masculina de 18 a 24 años que asiste a la escuela')),
                ('P18A24A_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Mujeres de 18 a 24 años de edad que van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población femenina de 18 a 24 años que asiste a la escuela')),
                ('P8A14AN', models.PositiveIntegerField(blank=True,
                                                        help_text='Personas de 8 a 14 años de edad que no saben leer y escribir.',
                                                        null=True,
                                                        verbose_name='Población de 8 a 14 años que no saben leer y escribir')),
                ('P8A14AN_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Hombres de 8 a 14 años de edad que no saben leer y escribir.',
                                                          null=True,
                                                          verbose_name='Población mascuina de 8 a 14 años que no saben leer y escribir')),
                ('P8A14AN_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Mujeres de 8 a 14 años de edad que no saben leer y escribir.',
                                                          null=True,
                                                          verbose_name='Población femenina de 8 a 14 años que no saben leer y escribir')),
                ('P15YM_AN', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 15 a 130 años de edad que no saben leer ni escribir.',
                                                         null=True,
                                                         verbose_name='Población de 15 años y más analfabeta')),
                ('P15YM_AN_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que no saben leer ni escribir.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más analfabeta')),
                ('P15YM_AN_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que no saben leer ni escribir.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más analfabeta')),
                ('P15YM_SE', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 15 a 130 años de edad que no aprobaron ningún grado de escolaridad o que solo tienen nivel preescolar',
                                                         null=True,
                                                         verbose_name='Población de 15 años y más sin escolaridad')),
                ('P15YM_SE_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que no aprobaron ningún grado de escolaridad o que solo tienen nivel preescolar',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más sin escolaridad')),
                ('P15YM_SE_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que no aprobaron ningún grado de escolaridad o que solo tienen nivel preescolar',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más sin escolaridad')),
                ('P15PRI_IN', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 15 a 130 años de edad que tienen como máxima escolaridad hasta el quinto grado aprobado en primaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                          null=True,
                                                          verbose_name='Población de 15 años y más con primaria incompleta')),
                ('P15PRI_INM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que tienen como máxima escolaridad hasta el quinto grado aprobado en primaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más con primaria incompleta')),
                ('P15PRI_INF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que tienen como máxima escolaridad hasta el quinto grado aprobado en primaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más con primaria incompleta')),
                ('P15PRI_CO', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 15 a 130 años de edad que tienen como máxima escolaridad 6 grados aprobados en primaria.',
                                                          null=True,
                                                          verbose_name='Población de 15 años y más con primaria completa')),
                ('P15PRI_COM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que tienen como máxima escolaridad 6 grados aprobados en primaria.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más con primaria completa')),
                ('P15PRI_COF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que tienen como máxima escolaridad 6 grados aprobados en primaria.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más con primaria completa')),
                ('P15SEC_IN', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 15 a 130 años de edad que tienen como máxima escolaridad hasta segundo grado aprobado de secundaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                          null=True,
                                                          verbose_name='Población de 15 años y más con secundaria incompleta')),
                ('P15SEC_INM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que tienen como máxima escolaridad hasta segundo grado aprobado de secundaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más con secundaria incompleta')),
                ('P15SEC_INF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que tienen como máxima escolaridad hasta segundo grado aprobado de secundaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más con secundaria incompleta')),
                ('P15SEC_CO', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 15 a 130 años de edad que tienen como máxima escolaridad 3 grados aprobados en secundaria.',
                                                          null=True,
                                                          verbose_name='Población de 15 años y más con secundaria completa')),
                ('P15SEC_COM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que tienen como máxima escolaridad 3 grados aprobados en secundaria.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más con secundaria completa')),
                ('P15SEC_COF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que tienen como máxima escolaridad 3 grados aprobados en secundaria.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más con secundaria completa')),
                ('P18YM_PB', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 18 a 130 años de edad que tienen como máxima escolaridad algún grado aprobado en: preparatoria ó bachillerato; normal básica, estudios técnicos o comerciales con secundaria terminada; estudios técnicos o comerciales con preparatoria terminada; normal de licenciatura; licenciatura o profesional; maestría o doctorado. Incluye a las personas que no especificaron los grados aprobados en los niveles señalados.',
                                                         null=True,
                                                         verbose_name='Población de 18 años y más con educación pos-básica')),
                ('P18YM_PB_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 18 a 130 años de edad que tienen como máxima escolaridad algún grado aprobado en: preparatoria ó bachillerato; normal básica, estudios técnicos o comerciales con secundaria terminada; estudios técnicos o comerciales con preparatoria terminada; normal de licenciatura; licenciatura o profesional; maestría o doctorado. Incluye a las personas que no especificaron los grados aprobados en los niveles señalados.',
                                                           null=True,
                                                           verbose_name='Población masculina de 18 años y más con educación pos-básica')),
                ('P18YM_PB_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 18 a 130 años de edad que tienen como máxima escolaridad algún grado aprobado en: preparatoria ó bachillerato; normal básica, estudios técnicos o comerciales con secundaria terminada; estudios técnicos o comerciales con preparatoria terminada; normal de licenciatura; licenciatura o profesional; maestría o doctorado. Incluye a las personas que no especificaron los grados aprobados en los niveles señalados.',
                                                           null=True,
                                                           verbose_name='Población femenina de 18 años y más con educación pos-básica')),
                ('GRAPROES', models.PositiveIntegerField(blank=True,
                                                         help_text='Resultado de dividir el monto de grados escolares aprobados por las personas de 15 a 130 años de edad entre las personas del mismo grupo de edad. Excluye a las personas que no especificaron los grados aprobados.',
                                                         null=True, verbose_name='Grado promedio de escolaridad')),
                ('GRAPROES_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Resultado de dividir el monto de grados escolares aprobados por las personas de 15 a 130 años de edad entre los hombres del mismo grupo de edad. Excluye a las personas que no especificaron los grados aprobados.',
                                                           null=True,
                                                           verbose_name='Grado promedio de escolaridad de la población masculina')),
                ('GRAPROES_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Resultado de dividir el monto de grados escolares aprobados por las personas de 15 a 130 años de edad entre las mujeres del mismo grupo de edad. Excluye a las personas que no especificaron los grados aprobados.',
                                                           null=True,
                                                           verbose_name='Grado promedio de escolaridad de la población femenina')),
                ('PEA', models.PositiveIntegerField(blank=True,
                                                    help_text='Personas de 12 años y más que trabajaron; tenían trabajo pero no trabajaron o; buscaron trabajo en la semana de referencia.',
                                                    null=True, verbose_name='Población económicamente activa')),
                ('PEA_M', models.PositiveIntegerField(blank=True,
                                                      help_text='Hombres de 12 años y más que trabajaron; tenían trabajo pero no trabajaron o; buscaron trabajo en la semana de referencia.',
                                                      null=True,
                                                      verbose_name='Población masculina económicamente activa')),
                ('PEA_F', models.PositiveIntegerField(blank=True,
                                                      help_text='Mujeres de 12 años y más que trabajaron; tenían trabajo pero no trabajaron o; buscaron trabajo en la semana de referencia.',
                                                      null=True,
                                                      verbose_name='Población femenina económicamente activa')),
                ('PE_INAC', models.PositiveIntegerField(blank=True,
                                                        help_text='Personas de 12 años y más pensionadas o jubiladas, estudiantes, dedicadas a los quehaceres del hogar, que tienen alguna limitación física o mental permanente que le impide trabajar.',
                                                        null=True, verbose_name='Población no económicamente activa')),
                ('PE_INAC_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Hombres de 12 años y más pensionadas o jubiladas, estudiantes, dedicadas a los quehaceres del hogar, que tienen alguna limitación física o mental permanente que le impide trabajar.',
                                                          null=True,
                                                          verbose_name='Población masculina no económicamente activa')),
                ('PE_INAC_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Mujeres de 12 años y más pensionadas o jubiladas, estudiantes, dedicadas a los quehaceres del hogar, que tienen alguna limitación física o mental permanente que le impide trabajar.',
                                                          null=True,
                                                          verbose_name='Población femenina no económicamente activa')),
                ('POCUPADA', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 12 a 130 años de edad que trabajaron o que no trabajaron pero sí tenían trabajo en la semana de referencia.',
                                                         null=True, verbose_name='Población ocupada')),
                ('POCUPADA_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 12 a 130 años de edad que trabajaron o que no trabajaron pero sí tenían trabajo en la semana de referencia.',
                                                           null=True, verbose_name='Población masculina ocupada')),
                ('POCUPADA_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 12 a 130 años de edad que trabajaron o que no trabajaron pero sí tenían trabajo en la semana de referencia.',
                                                           null=True, verbose_name='Población femenina ocupada')),
                ('PDESOCUP', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 12 a 130 años de edad que no tenían trabajo, pero buscaron trabajo en la semana de referencia.',
                                                         null=True, verbose_name='Población desocupada')),
                ('PDESOCUP_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 12 a 130 años de edad que no tenían trabajo, pero buscaron trabajo en la semana de referencia.',
                                                           null=True, verbose_name='Población masculina desocupada')),
                ('PDESOCUP_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 12 a 130 años de edad que no tenían trabajo, pero buscaron trabajo en la semana de referencia.',
                                                           null=True, verbose_name='Población femenina desocupada')),
                ('PSINDER', models.PositiveIntegerField(blank=True,
                                                        help_text='Total de personas que no tienen derecho a recibir servicios médicos en ninguna institución pública o privada.',
                                                        null=True,
                                                        verbose_name='Población sin derechohabiencia a servicios de salud')),
                ('PDER_SS', models.PositiveIntegerField(blank=True,
                                                        help_text='Total de personas que tienen derecho a recibir servicios médicos en alguna institución de salud pública o privada como: el Instituto Mexicano del Seguro Social (IMSS), el Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado (ISSSTE e ISSSTE estatal), Petróleos Mexicanos (PEMEX), la Secretaría de la Defensa Nacional (SEDENA) o la Secretaría de Marina Armada de México (SEMAR), el Seguro Popular o para una Nueva Generación (Incluye al Sistema de Protección Social en Salud que coordina la Secretaría de Salud) o en otra.',
                                                        null=True,
                                                        verbose_name='Población derechohabiente a servicios de salud')),
                ('PDER_IMSS', models.PositiveIntegerField(blank=True,
                                                          help_text='Total de personas que tienen derecho a recibir servicios médicos en el Instituto Mexicano del Seguro Social (IMSS).',
                                                          null=True,
                                                          verbose_name='Población derechohabiente del IMSS')),
                ('PDER_ISTE', models.PositiveIntegerField(blank=True,
                                                          help_text='Total de personas que tienen derecho a recibir servicios médicos en el Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado.',
                                                          null=True,
                                                          verbose_name='Población derechohabiente del ISSSTE')),
                ('PDER_ISTEE', models.PositiveIntegerField(blank=True,
                                                           help_text='Total de personas que tienen derecho a recibir servicios médicos en los institutos de seguridad social de los estados (ISSSET, ISSSEMyM, ISSSTEZAC, ISSSPEA o ISSSTESON).',
                                                           null=True,
                                                           verbose_name='Población derechohabiente del ISSSTE estatal')),
                ('PDER_SEGP', models.PositiveIntegerField(blank=True,
                                                          help_text='Total de personas que tienen derecho a recibir servicios médicos en la Secretaría de Salud, mediante el Sistema de Protección Social en Salud (Seguro Popular).',
                                                          null=True,
                                                          verbose_name='Población derechohabiente del seguro popular o Seguro Médico para una Nueva Generación')),
                ('P12YM_SOLT', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas de 12 a 130 años de edad que viven con su pareja en unión libre; casadas solo por el civil; casadas religiosamente o; casadas por el civil y religiosamente.',
                                                           null=True,
                                                           verbose_name='Población casada o unida de 12 años y más')),
                ('P12YM_CASA', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas de 12 a 130 años de edad que viven con su pareja en unión libre; casadas solo por el civil; casadas solo religiosamente o; casadas por el civil y religiosamente.',
                                                           null=True,
                                                           verbose_name='Población casada o unida de 12 años y más')),
                ('P12YM_SEPA', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas de 12 a 130 años de edad que están separadas, divorciadas o viudas.',
                                                           null=True,
                                                           verbose_name='Población que estuvo casada o unida de 12 años y más')),
                ('PCATOLICA',
                 models.PositiveIntegerField(blank=True, help_text='Personas con religión católica.', null=True,
                                             verbose_name='Población con religión católica')),
                ('PNCATOLICA', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con religiones Protestantes Históricas, Pentecostales, Neopentecostales, Iglesia del Dios Vivo, Columna y Apoyo de la Verdad, la Luz del Mundo, Cristianas, Evangélicas y Bíblicas diferentes de las Evangélicas.',
                                                           null=True,
                                                           verbose_name='Protestantes, Evangélicas y Bíblicas diferentes de evangélicas')),
                ('POTRAS_REL', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con religiones de Origen oriental, Judaico, Islámico, New Age, Escuelas esotéricas, Raíces étnicas, Espiritualistas, Ortodoxos, Otros movimientos religiosos y Cultos populares.',
                                                           null=True,
                                                           verbose_name='Población con otras religiones diferentes a las anteriores')),
                ('PSIN_RELIG', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas sin adscripción religiosa. Incluye ateísmo.',
                                                           null=True,
                                                           verbose_name='Población con otras religiones diferentes a las anteriores')),
                ('TOTHOG', models.PositiveIntegerField(blank=True,
                                                       help_text='Hogares en viviendas particulares habitadas. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                       null=True, verbose_name='Total de hogares censales')),
                ('HOGJEF_M', models.PositiveIntegerField(blank=True,
                                                         help_text='Hogares en viviendas particulares habitadas donde el jefe es hombre. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                         null=True,
                                                         verbose_name='Hogares censales con jefatura masculina')),
                ('HOGJEF_F', models.PositiveIntegerField(blank=True,
                                                         help_text='Hogares en viviendas particulares habitadas donde el jefe es mujer. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                         null=True,
                                                         verbose_name='Hogares censales con jefatura femenina')),
                ('POBHOG', models.PositiveIntegerField(blank=True,
                                                       help_text='Personas en hogares censales. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                       null=True, verbose_name='Población en hogares censales')),
                ('PHOGJEF_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas en hogares censales donde el jefe es hombre. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                          null=True,
                                                          verbose_name='Población en hogares censales con jefatura masculina')),
                ('PHOGJEF_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas en hogares censales donde el jefe es mujer. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                          null=True,
                                                          verbose_name='Población en hogares censales con jefatura femenina')),
                ('VIVTOT', models.PositiveIntegerField(blank=True,
                                                       help_text='Viviendas particulares habitadas, deshabitadas, de uso temporal y colectivas. Incluye a las viviendas particulares sin información de sus ocupantes.',
                                                       null=True, verbose_name='Total de viviendas')),
                ('TVIVHAB', models.PositiveIntegerField(blank=True,
                                                        help_text='Viviendas particulares y colectivas habitadas. Incluye a las viviendas particulares sin información de sus ocupantes.',
                                                        null=True, verbose_name='Total de viviendas habitadas')),
                ('TVIVPAR', models.PositiveIntegerField(blank=True,
                                                        help_text='Viviendas particulares habitadas, deshabitadas y de uso temporal. Excluye a las viviendas particulares sin información de ocupantes.',
                                                        null=True, verbose_name='Total de viviendas particulares')),
                ('VIVPAR_HAB', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas de cualquier clase: casa independiente, departamento en edificio, vivienda o cuarto en vecindad, vivienda o cuarto de azotea, local no construido para habitación, vivienda móvil, refugios o clase no especificada. Excluye a las viviendas particulares sin información de ocupantes.',
                                                           null=True, verbose_name='Viviendas particulares habitadas')),
                ('TVIVPARHAB', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas de cualquier clase: casa independiente, departamento en edificio, vivienda o cuarto en vecindad, vivienda o cuarto de azotea, local no construido para habitación, vivienda móvil, refugios o clase no especificada. Incluye a las viviendas particulares sin información de ocupantes.',
                                                           null=True,
                                                           verbose_name='Total de viviendas particulares habitadas')),
                ('VIVPAR_DES',
                 models.PositiveIntegerField(blank=True, help_text='Viviendas particulares deshabitadas.', null=True,
                                             verbose_name='Viviendas particulares deshabitadas')),
                ('VIVPAR_UT',
                 models.PositiveIntegerField(blank=True, help_text='Viviendas particulares de uso temporal.', null=True,
                                             verbose_name='Viviendas particulares de uso temporal')),
                ('OCUPVIVPAR', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas que residen en viviendas particulares habitadas de cualquier clase: casa independiente, departamento en edificio, vivienda o cuarto en vecindad, vivienda o cuarto de azotea, local no construido para habitación, vivienda móvil, refugios o clase no especificada. Excluye la estimación del número de personas en viviendas particulares sin información de ocupantes.',
                                                           null=True,
                                                           verbose_name='Ocupantes en viviendas particulares habitadas')),
                ('PROM_OCUP', models.PositiveIntegerField(blank=True,
                                                          help_text='Resultado de dividir el número de personas que residen en viviendas particulares habitadas, entre el número de esas viviendas. Excluye la estimación del número de personas y de viviendas particulares sin información de ocupantes.',
                                                          null=True,
                                                          verbose_name='Promedio de ocupantes en viviendas particulares habitadas')),
                ('PRO_OCUP_C', models.PositiveIntegerField(blank=True,
                                                           help_text='Resultado de dividir el número de personas que residen en viviendas particulares habitadas entre el número de cuartos de esas viviendas. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Promedio de ocupantes por cuarto en viviendas particulares habitadas')),
                ('VPH_PISODT', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas con piso de cemento o firme, madera, mosaico u otro material. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con piso de material diferente de tierra')),
                ('VPH_PISOTI', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas con piso de tierra. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con piso de tierra')),
                ('VPH_1DOR', models.PositiveIntegerField(blank=True,
                                                         help_text='Viviendas particulares habitadas donde sólo uno de los cuartos se usa para dormir. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                         null=True,
                                                         verbose_name='Viviendas particulares habitadas con un dormitorio')),
                ('VPH_2YMASD', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que usan para dormir entre 2 y 25 cuartos.Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con dos dormitorios y más')),
                ('VPH_1CUART', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen un solo cuarto. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda. Excluye la estimación del número de personas y de viviendas particulares sin información de ocupantes.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con un solo cuarto')),
                ('VPH_2CUART', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen dos cuartos. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda. Excluye la estimación del número de personas y de viviendas particulares sin información de ocupantes.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con dos cuartos')),
                ('VPH_3YMASC', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen entre 3 y 25 cuartos. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con 3 cuartos y más')),
                ('VPH_C_ELEC', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen luz eléctrica. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que disponen de luz eléctrica')),
                ('VPH_S_ELEC', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que no tienen luz eléctrica. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que no disponen de luz eléctrica')),
                ('VPH_AGUADV', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen disponibilidad de agua entubada dentro de la vivienda, o fuera de la vivienda pero dentro del terreno. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que disponen de agua entubada en el ámbito de la vivienda')),
                ('VPH_AGUAFV', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen disponibilidad de agua de una llave pública o hidrante, de otra vivienda, de pipa, de pozo, río, arroyo, lago u otro. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que no disponen de agua entubada en el ámbito de la vivienda')),
                ('VPH_EXCSA', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen excusado, retrete, sanitario, letrina u hoyo negro. Excluye la estimación del número de personas y de viviendas particulares sin información de ocupantes.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de excusado o sanitario')),
                ('VPH_DRENAJ', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen drenaje conectado a la red pública, fosa séptica, barranca, grieta, río, lago o mar. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que disponen de drenaje')),
                ('VPH_NODREN', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que no tienen drenaje. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que no disponen de drenaje')),
                ('VPH_C_SERV', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen luz eléctrica, agua entubada dentro o fuera de la vivienda, pero dentro del terreno, así como drenaje. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que disponen de luz eléctrica, agua entubada de la red pública y drenaje')),
                ('VPH_SNBIEN', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que no disponen de radio, televisión, refrigerador, lavadora, automóvil, computadora, teléfono fijo, celular ni internet. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas sin ningún bien')),
                ('VPH_RADIO', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen radio. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a   que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de radio')),
                ('VPH_TV', models.PositiveIntegerField(blank=True,
                                                       help_text='Viviendas particulares habitadas que tienen televisor. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                       null=True,
                                                       verbose_name='Viviendas particulares habitadas que disponen de televisor')),
                ('VPH_REFRI', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen refrigerador. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de refrigerador')),
                ('VPH_LAVAD', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen lavadora. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda..',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de lavadora')),
                ('VPH_AUTOM', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen automóvil o camioneta. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de automóvil o camioneta')),
                ('VPH_PC', models.PositiveIntegerField(blank=True,
                                                       help_text='Viviendas particulares habitadas que tienen computadora. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                       null=True,
                                                       verbose_name='Viviendas particulares habitadas que disponen de computadora')),
                ('VPH_TELEF', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen línea telefónica fija. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de línea telefónica fija')),
                ('VPH_CEL', models.PositiveIntegerField(blank=True,
                                                        help_text='Viviendas particulares habitadas que tienen teléfono celular. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                        null=True,
                                                        verbose_name='Viviendas particulares habitadas que disponen de teléfono celular')),
                ('VPH_INTER', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen servicio de internet. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de internet')),
                ('cvegeo', models.CharField(max_length=5)),
                ('nomgeo', models.CharField(max_length=80)),
                ('cve_mun', models.CharField(max_length=3)),
                ('entidad',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='geo.entidad')),
                ],
            options={
                'ordering': ['nomgeo'],
                },
            ),
        migrations.CreateModel(
            name='Manzana',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('cve_ent', models.CharField(max_length=2)),
                ('POBTOT', models.PositiveIntegerField(blank=True,
                                                       help_text='Total de personas que residen habitualmente en el país, entidad federativa, municipio y localidad. Incluye la estimación del número de personas en viviendas particulares sin información de ocupantes. Incluye a la población que no especificó su edad.',
                                                       null=True, verbose_name='Población total')),
                ('POBMAS', models.PositiveIntegerField(blank=True,
                                                       help_text='Total de hombres que residen habitualmente en el país, entidad federativa, municipio y localidad. Incluye la estimación del número de hombres en viviendas particulares sin información de ocupantes. Incluye a la población que no especificó su edad.',
                                                       null=True, verbose_name='Población masculina')),
                ('POBFEM', models.PositiveIntegerField(blank=True,
                                                       help_text='Total de mujeres que residen habitualmente en el país, entidad federativa, municipio y localidad. Incluye la estimación del número de mujeres en viviendas particulares sin información de ocupantes. Incluye a la población que no especificó su edad.',
                                                       null=True, verbose_name='Población femenina')),
                ('P_0A2',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 0 a 2 años de edad.', null=True,
                                             verbose_name='Población de 0 a 2 años')),
                ('P_0A2_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 0 a 2 años de edad.', null=True,
                                             verbose_name='Población masculina de 0 a 2 años')),
                ('P_0A2_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 0 a 2 años de edad.', null=True,
                                             verbose_name='Población femenina de 0 a 2 años')),
                ('P_3YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 3 a 130 años de edad.', null=True,
                                             verbose_name='Población de 3 años y más')),
                ('P_3YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 3 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 3 años y más')),
                ('P_3YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 3 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 3 años y más ')),
                ('P_5YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 5 a 130 años de edad.', null=True,
                                             verbose_name='Población de 5 años y más')),
                ('P_5YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 5 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 5 años y más')),
                ('P_5YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 5 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 5 años y más ')),
                ('P_12YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 12 a 130 años de edad.', null=True,
                                             verbose_name='Población de 12 años y más')),
                ('P_12YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 12 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 12 años y más')),
                ('P_12YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 12 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 12 años y más ')),
                ('P_15YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 15 a 130 años de edad.', null=True,
                                             verbose_name='Población de 15 años y más')),
                ('P_15YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 15 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 15 años y más')),
                ('P_15YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 15 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 15 años y más ')),
                ('P_18YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 18 a 130 años de edad.', null=True,
                                             verbose_name='Población de 18 años y más')),
                ('P_18YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 18 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 18 años y más')),
                ('P_18YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 18 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 18 años y más ')),
                ('P_3A5',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 3 a 5 años de edad.', null=True,
                                             verbose_name='Población de 3 a 5 años')),
                ('P_3A5_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 3 a 5 años de edad.', null=True,
                                             verbose_name='Población masculina de 3 a 5 años')),
                ('P_3A5_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 3 a 5 años de edad.', null=True,
                                             verbose_name='Población femenina de 3 a 5 años')),
                ('P_6A11',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 6 a 11 años de edad.', null=True,
                                             verbose_name='Población de 6 a 11 años')),
                ('P_6A11_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 6 a 11 años de edad.', null=True,
                                             verbose_name='Población masculina de 6 a 11 años')),
                ('P_6A11_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 6 a 11 años de edad.', null=True,
                                             verbose_name='Población femenina de 6 a 11 años')),
                ('P_8A14',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 8 a 14 años de edad.', null=True,
                                             verbose_name='Población de 8 a 14 años')),
                ('P_8A14_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 8 a 14 años de edad.', null=True,
                                             verbose_name='Población masculina de 8 a 14 años')),
                ('P_8A14_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 8 a 14 años de edad.', null=True,
                                             verbose_name='Población femenina de 8 a 14 años')),
                ('P_12A14',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 12 a 14 años de edad.', null=True,
                                             verbose_name='Población de 12 a 14 años')),
                ('P_12A14_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 12 a 14 años de edad.', null=True,
                                             verbose_name='Población masculina de 12 a 14 años')),
                ('P_12A14_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 12 a 14 años de edad.', null=True,
                                             verbose_name='Población femenina de 12 a 14 años')),
                ('P_15A17',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 15 a 17 años de edad.', null=True,
                                             verbose_name='Población de 15 a 17 años')),
                ('P_15A17_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 15 a 17 años de edad.', null=True,
                                             verbose_name='Población masculina de 15 a 17 años')),
                ('P_15A17_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 15 a 17 años de edad.', null=True,
                                             verbose_name='Población femenina de 15 a 17 años')),
                ('P_18A24',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 18 a 24 años de edad.', null=True,
                                             verbose_name='Población de 18 a 24 años')),
                ('P_18A24_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 18 a 24 años de edad.', null=True,
                                             verbose_name='Población masculina de 18 a 24 años')),
                ('P_18A24_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 18 a 24 años de edad.', null=True,
                                             verbose_name='Población femenina de 18 a 24 años')),
                ('P_15A49',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 15 a 49 años de edad.', null=True,
                                             verbose_name='Población de 15 a 49 años')),
                ('P_15A49_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 15 a 49 años de edad.', null=True,
                                             verbose_name='Población masculina de 15 a 49 años')),
                ('P_15A49_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 15 a 49 años de edad.', null=True,
                                             verbose_name='Población femenina de 15 a 49 años')),
                ('P_60YMAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 60 a 130 años de edad.', null=True,
                                             verbose_name='Población de 60 años y más')),
                ('P_60YMAS_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres de 60 a 130 años de edad.', null=True,
                                             verbose_name='Población masculina de 60 años y más')),
                ('P_60YMAS_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres de 60 a 130 años de edad.', null=True,
                                             verbose_name='Población femenina de 60 años y más')),
                ('REL_H_M', models.PositiveIntegerField(blank=True,
                                                        help_text='Resultado de dividir el total de hombres entre el total de mujeres y multiplicarlo por cien. Indica el número de hombres por cada 100 mujeres..',
                                                        null=True, verbose_name='Relación hombres-mujeres')),
                ('POB0_14',
                 models.PositiveIntegerField(blank=True, help_text='Personas de cero a 14 años de edad.', null=True,
                                             verbose_name='Población de cero a 14 años')),
                ('POB15_64',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 15 a 64 años de edad.', null=True,
                                             verbose_name='Población de 15 a 64 años')),
                ('POB65_MAS',
                 models.PositiveIntegerField(blank=True, help_text='Personas de 65 a 130 años de edad.', null=True,
                                             verbose_name='Población de 65 años y más')),
                ('PROM_HNV', models.PositiveIntegerField(blank=True,
                                                         help_text='Resultado de dividir el total de hijos nacidos vivos de las mujeres de 12 a 130 años de edad, entre el total de mujeres del mismo grupo de edad. Excluye a las mujeres que no especificaron el número de hijos..',
                                                         null=True, verbose_name='Promedio de hijos nacidos vivos')),
                ('PNACENT',
                 models.PositiveIntegerField(blank=True, help_text='Personas nacidas en la misma entidad federativa.',
                                             null=True, verbose_name='Población nacida en la entidad')),
                ('PNACENT_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres nacidos en la misma entidad federativa.',
                                             null=True, verbose_name='Población masculina nacida en la entidad')),
                ('PNACENT_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres nacidas en la misma entidad federativa.',
                                             null=True, verbose_name='Población femenina nacida en la entidad')),
                ('PNACOE',
                 models.PositiveIntegerField(blank=True, help_text='Personas nacidas en otra entidad federativa.',
                                             null=True, verbose_name='Población nacida en otra entidad')),
                ('PNACOE_M',
                 models.PositiveIntegerField(blank=True, help_text='Hombres nacidos en otra entidad federativa.',
                                             null=True, verbose_name='Población masculina nacida en otra entidad')),
                ('PNACOE_F',
                 models.PositiveIntegerField(blank=True, help_text='Mujeres nacidas en otra entidad federativa.',
                                             null=True, verbose_name='Población femenina nacida en otra entidad')),
                ('PRES2005', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 5 a 130 años de edad que en los años 2005 y 2010 residían en la misma entidad federativa.',
                                                         null=True,
                                                         verbose_name='Población de 5 años y más residente en la entidad en junio de 2005')),
                ('PRES2005_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 5 a 130 años de edad que en los años 2005 y 2010 residían en la misma entidad federativa.',
                                                           null=True,
                                                           verbose_name='Población masculina de 5 años y más residente en la entidad en junio de 2005')),
                ('PRES2005_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 5 a 130 años de edad que en los años 2005 y 2010 residían en la misma entidad federativa.',
                                                           null=True,
                                                           verbose_name='Población femenina de 5 años y más residente en la entidad en junio de 2005')),
                ('PRESOE05', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 5 a 130 años de edad que en el año 2005 residían en otra entidad federativa.',
                                                         null=True,
                                                         verbose_name='Población de 5 años y más residente en otra entidad en junio de 2005')),
                ('PRESOE05_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 5 a 130 años de edad que en el año 2005 residían en otra entidad federativa.',
                                                           null=True,
                                                           verbose_name='Población masculina de 5 años y más residente en otra entidad en junio de 2005')),
                ('PRESOE05_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 5 a 130 años de edad que en el año 2005 residían en otra entidad federativa.',
                                                           null=True,
                                                           verbose_name='Población femenina de 5 años y más residente en otra entidad en junio de 2005')),
                ('P3YM_HLI', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 3 a 130 años de edad que hablan alguna lengua indígena.',
                                                         null=True,
                                                         verbose_name='Población de 3 años y más que habla alguna lengua indígena')),
                ('P3YM_HLI_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 3 a 130 años de edad que hablan alguna lengua indígena.',
                                                           null=True,
                                                           verbose_name='Población masculiina de 3 años y más que habla alguna lengua indígena')),
                ('P3YM_HLI_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 3 a 130 años de edad que hablan alguna lengua indígena.',
                                                           null=True,
                                                           verbose_name='Población femenina de 3 años y más que habla alguna lengua indígena')),
                ('P3HLINHE', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 3 a 130 años de edad que hablan alguna lengua indígena y además no hablan español.',
                                                         null=True,
                                                         verbose_name='Población de 3 años y más que habla alguna lengua indígena y no habla español')),
                ('P3HLINHE_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 3 a 130 años de edad que hablan alguna lengua indígena y además no hablan español.',
                                                           null=True,
                                                           verbose_name='Población masculina de 3 años y más que habla alguna lengua indígena y no habla español')),
                ('P3HLINHE_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 3 a 130 años de edad que hablan alguna lengua indígena y además no hablan español.',
                                                           null=True,
                                                           verbose_name='Población femeninade 3 años y más que habla alguna lengua indígena y no habla español')),
                ('P3HLI_HE', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 3 a 130 años de edad que hablan alguna lengua indígena y además hablan español.',
                                                         null=True,
                                                         verbose_name='Población de 3 años y más que habla alguna lengua indígena y habla español')),
                ('P3HLI_HE_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 3 a 130 años de edad que hablan alguna lengua indígena y además hablan español.',
                                                           null=True,
                                                           verbose_name='Población masculina de 3 años y más que habla alguna lengua indígena y habla español')),
                ('P3HLI_HE_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 3 a 130 años de edad que hablan alguna lengua indígena y además hablan español.',
                                                           null=True,
                                                           verbose_name='Población femenina de 3 años y más que habla alguna lengua indígena y habla español')),
                ('P5_HLI', models.PositiveIntegerField(blank=True,
                                                       help_text='Personas de 5 años y más que hablan alguna lengua indígena.',
                                                       null=True,
                                                       verbose_name='Población de 5 años y más que habla alguna lengua indígena')),
                ('P5_HLI_NHE', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas de 5 años y más que hablan alguna lengua indígena y no hablan español..',
                                                           null=True,
                                                           verbose_name='Población de 5 años y más que habla alguna lengua indígena y no habla español')),
                ('P5_HLI_HE', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 5 años y más que hablan alguna lengua indígena y que hablan español..',
                                                          null=True,
                                                          verbose_name='Población de 5 años y más que habla alguna lengua indígena y habla español')),
                ('PHOG_IND', models.PositiveIntegerField(blank=True,
                                                         help_text='Total de personas que forman hogares censales donde el jefe del hogar o su cónyuge hablan alguna lengua indígena.',
                                                         null=True,
                                                         verbose_name='Población en hogares censales indígenas')),
                ('PCON_LIM', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas que tienen dificultad para el desempeño y/o realización de tareas en la vida cotidiana.',
                                                         null=True,
                                                         verbose_name='Población con limitación en la actividad')),
                ('PCLIM_MOT', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas con dificultad para caminar o moverse, subir o bajar.',
                                                          null=True,
                                                          verbose_name='Población con limitación para caminar o moverse, subir o bajar')),
                ('PCLIM_VIS', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas con dificultad para ver, aún cuando usen lentes.',
                                                          null=True,
                                                          verbose_name='Población con limitación para ver, aún usando lentes')),
                ('PCLIM_LENG', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con dificultad para comunicarse con los demás o que tienen limitaciones para la recepción y producción de mensajes para hacerse entender a través del lenguaje, signos y símbolos..',
                                                           null=True,
                                                           verbose_name='Población con limitación para hablar, comunicarse o conversars')),
                ('PCLIM_AUD', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas con dificultad para escuchar, aún usando aparato auditivo.',
                                                          null=True,
                                                          verbose_name='Población con limitación para escuchar')),
                ('PCLIM_MOT2', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con dificultad para bañarse, vestirse y/o comer.',
                                                           null=True,
                                                           verbose_name='Población con limitación para vestirse, bañarse o comer')),
                ('PCLIM_MEN', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas con dificultad para mantener un nivel de atención en cosas sencillas.',
                                                          null=True,
                                                          verbose_name='Población con limitación para poner atención o aprender cosas sencillas')),
                ('PCLIM_MEN2', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con dificultad o con alguna limitación mental.',
                                                           null=True, verbose_name='Población con limitación mental')),
                ('PSIN_LIM', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas que no tienen dificultad para el desempeño y/o realización de tareas en la vida cotidiana.',
                                                         null=True,
                                                         verbose_name='Población sin limitación en la actividad')),
                ('P3A5_NOA', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 3 a 5 años de edad que no van a la escuela.',
                                                         null=True,
                                                         verbose_name='Población de 3 a 5 años que no asiste a la escuela')),
                ('P3A5_NOA_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 3 a 5 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población masculina de 3 a 5 años que no asiste a la escuela')),
                ('P3A5_NOA_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 3 a 5 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población femenina de 3 a 5 años que no asiste a la escuela')),
                ('P6A11_NOA', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 6 a 11 años de edad que no van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población de 6 a 11 años que no asiste a la escuela')),
                ('P6A11_NOAM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 6 a 11 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población masculina de 6 a 11 años que no asiste a la escuela')),
                ('P6A11_NOAF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 6 a 11 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población femenina de 6 a 11 años que no asiste a la escuela')),
                ('P12A14NOA', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 12 a 14 años de edad que no van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población de 12 a 14 años que no asiste a la escuela')),
                ('P12A14NOAM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 12 a 14 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población masculina de 12 a 14 años que no asiste a la escuela')),
                ('P12A14NOAF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 12 a 14 años de edad que no van a la escuela.',
                                                           null=True,
                                                           verbose_name='Población femenina de 12 a 14 años que no asiste a la escuela')),
                ('P15A17A', models.PositiveIntegerField(blank=True,
                                                        help_text='Personas de 15 a 17 años de edad que van a la escuela.',
                                                        null=True,
                                                        verbose_name='Población de 15 a 17 años que asiste a la escuela')),
                ('P15A17A_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Hombres de 15 a 17 años de edad que van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población masculina de 15 a 17 años que asiste a la escuela')),
                ('P15A17A_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Mujeres de 15 a 17 años de edad que van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población femenina de 15 a 17 años que asiste a la escuela')),
                ('P18A24A', models.PositiveIntegerField(blank=True,
                                                        help_text='Personas de 18 a 24 años de edad que van a la escuela.',
                                                        null=True,
                                                        verbose_name='Población de 18 a 24 años que asiste a la escuela')),
                ('P18A24A_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Hombres de 18 a 24 años de edad que van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población masculina de 18 a 24 años que asiste a la escuela')),
                ('P18A24A_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Mujeres de 18 a 24 años de edad que van a la escuela.',
                                                          null=True,
                                                          verbose_name='Población femenina de 18 a 24 años que asiste a la escuela')),
                ('P8A14AN', models.PositiveIntegerField(blank=True,
                                                        help_text='Personas de 8 a 14 años de edad que no saben leer y escribir.',
                                                        null=True,
                                                        verbose_name='Población de 8 a 14 años que no saben leer y escribir')),
                ('P8A14AN_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Hombres de 8 a 14 años de edad que no saben leer y escribir.',
                                                          null=True,
                                                          verbose_name='Población mascuina de 8 a 14 años que no saben leer y escribir')),
                ('P8A14AN_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Mujeres de 8 a 14 años de edad que no saben leer y escribir.',
                                                          null=True,
                                                          verbose_name='Población femenina de 8 a 14 años que no saben leer y escribir')),
                ('P15YM_AN', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 15 a 130 años de edad que no saben leer ni escribir.',
                                                         null=True,
                                                         verbose_name='Población de 15 años y más analfabeta')),
                ('P15YM_AN_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que no saben leer ni escribir.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más analfabeta')),
                ('P15YM_AN_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que no saben leer ni escribir.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más analfabeta')),
                ('P15YM_SE', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 15 a 130 años de edad que no aprobaron ningún grado de escolaridad o que solo tienen nivel preescolar',
                                                         null=True,
                                                         verbose_name='Población de 15 años y más sin escolaridad')),
                ('P15YM_SE_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que no aprobaron ningún grado de escolaridad o que solo tienen nivel preescolar',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más sin escolaridad')),
                ('P15YM_SE_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que no aprobaron ningún grado de escolaridad o que solo tienen nivel preescolar',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más sin escolaridad')),
                ('P15PRI_IN', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 15 a 130 años de edad que tienen como máxima escolaridad hasta el quinto grado aprobado en primaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                          null=True,
                                                          verbose_name='Población de 15 años y más con primaria incompleta')),
                ('P15PRI_INM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que tienen como máxima escolaridad hasta el quinto grado aprobado en primaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más con primaria incompleta')),
                ('P15PRI_INF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que tienen como máxima escolaridad hasta el quinto grado aprobado en primaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más con primaria incompleta')),
                ('P15PRI_CO', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 15 a 130 años de edad que tienen como máxima escolaridad 6 grados aprobados en primaria.',
                                                          null=True,
                                                          verbose_name='Población de 15 años y más con primaria completa')),
                ('P15PRI_COM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que tienen como máxima escolaridad 6 grados aprobados en primaria.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más con primaria completa')),
                ('P15PRI_COF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que tienen como máxima escolaridad 6 grados aprobados en primaria.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más con primaria completa')),
                ('P15SEC_IN', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 15 a 130 años de edad que tienen como máxima escolaridad hasta segundo grado aprobado de secundaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                          null=True,
                                                          verbose_name='Población de 15 años y más con secundaria incompleta')),
                ('P15SEC_INM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que tienen como máxima escolaridad hasta segundo grado aprobado de secundaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más con secundaria incompleta')),
                ('P15SEC_INF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que tienen como máxima escolaridad hasta segundo grado aprobado de secundaria. Incluye a las personas que no especificaron los grados aprobados en el nivel señalado.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más con secundaria incompleta')),
                ('P15SEC_CO', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas de 15 a 130 años de edad que tienen como máxima escolaridad 3 grados aprobados en secundaria.',
                                                          null=True,
                                                          verbose_name='Población de 15 años y más con secundaria completa')),
                ('P15SEC_COM', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 15 a 130 años de edad que tienen como máxima escolaridad 3 grados aprobados en secundaria.',
                                                           null=True,
                                                           verbose_name='Población masculina de 15 años y más con secundaria completa')),
                ('P15SEC_COF', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 15 a 130 años de edad que tienen como máxima escolaridad 3 grados aprobados en secundaria.',
                                                           null=True,
                                                           verbose_name='Población femenina de 15 años y más con secundaria completa')),
                ('P18YM_PB', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 18 a 130 años de edad que tienen como máxima escolaridad algún grado aprobado en: preparatoria ó bachillerato; normal básica, estudios técnicos o comerciales con secundaria terminada; estudios técnicos o comerciales con preparatoria terminada; normal de licenciatura; licenciatura o profesional; maestría o doctorado. Incluye a las personas que no especificaron los grados aprobados en los niveles señalados.',
                                                         null=True,
                                                         verbose_name='Población de 18 años y más con educación pos-básica')),
                ('P18YM_PB_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 18 a 130 años de edad que tienen como máxima escolaridad algún grado aprobado en: preparatoria ó bachillerato; normal básica, estudios técnicos o comerciales con secundaria terminada; estudios técnicos o comerciales con preparatoria terminada; normal de licenciatura; licenciatura o profesional; maestría o doctorado. Incluye a las personas que no especificaron los grados aprobados en los niveles señalados.',
                                                           null=True,
                                                           verbose_name='Población masculina de 18 años y más con educación pos-básica')),
                ('P18YM_PB_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 18 a 130 años de edad que tienen como máxima escolaridad algún grado aprobado en: preparatoria ó bachillerato; normal básica, estudios técnicos o comerciales con secundaria terminada; estudios técnicos o comerciales con preparatoria terminada; normal de licenciatura; licenciatura o profesional; maestría o doctorado. Incluye a las personas que no especificaron los grados aprobados en los niveles señalados.',
                                                           null=True,
                                                           verbose_name='Población femenina de 18 años y más con educación pos-básica')),
                ('GRAPROES', models.PositiveIntegerField(blank=True,
                                                         help_text='Resultado de dividir el monto de grados escolares aprobados por las personas de 15 a 130 años de edad entre las personas del mismo grupo de edad. Excluye a las personas que no especificaron los grados aprobados.',
                                                         null=True, verbose_name='Grado promedio de escolaridad')),
                ('GRAPROES_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Resultado de dividir el monto de grados escolares aprobados por las personas de 15 a 130 años de edad entre los hombres del mismo grupo de edad. Excluye a las personas que no especificaron los grados aprobados.',
                                                           null=True,
                                                           verbose_name='Grado promedio de escolaridad de la población masculina')),
                ('GRAPROES_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Resultado de dividir el monto de grados escolares aprobados por las personas de 15 a 130 años de edad entre las mujeres del mismo grupo de edad. Excluye a las personas que no especificaron los grados aprobados.',
                                                           null=True,
                                                           verbose_name='Grado promedio de escolaridad de la población femenina')),
                ('PEA', models.PositiveIntegerField(blank=True,
                                                    help_text='Personas de 12 años y más que trabajaron; tenían trabajo pero no trabajaron o; buscaron trabajo en la semana de referencia.',
                                                    null=True, verbose_name='Población económicamente activa')),
                ('PEA_M', models.PositiveIntegerField(blank=True,
                                                      help_text='Hombres de 12 años y más que trabajaron; tenían trabajo pero no trabajaron o; buscaron trabajo en la semana de referencia.',
                                                      null=True,
                                                      verbose_name='Población masculina económicamente activa')),
                ('PEA_F', models.PositiveIntegerField(blank=True,
                                                      help_text='Mujeres de 12 años y más que trabajaron; tenían trabajo pero no trabajaron o; buscaron trabajo en la semana de referencia.',
                                                      null=True,
                                                      verbose_name='Población femenina económicamente activa')),
                ('PE_INAC', models.PositiveIntegerField(blank=True,
                                                        help_text='Personas de 12 años y más pensionadas o jubiladas, estudiantes, dedicadas a los quehaceres del hogar, que tienen alguna limitación física o mental permanente que le impide trabajar.',
                                                        null=True, verbose_name='Población no económicamente activa')),
                ('PE_INAC_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Hombres de 12 años y más pensionadas o jubiladas, estudiantes, dedicadas a los quehaceres del hogar, que tienen alguna limitación física o mental permanente que le impide trabajar.',
                                                          null=True,
                                                          verbose_name='Población masculina no económicamente activa')),
                ('PE_INAC_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Mujeres de 12 años y más pensionadas o jubiladas, estudiantes, dedicadas a los quehaceres del hogar, que tienen alguna limitación física o mental permanente que le impide trabajar.',
                                                          null=True,
                                                          verbose_name='Población femenina no económicamente activa')),
                ('POCUPADA', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 12 a 130 años de edad que trabajaron o que no trabajaron pero sí tenían trabajo en la semana de referencia.',
                                                         null=True, verbose_name='Población ocupada')),
                ('POCUPADA_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 12 a 130 años de edad que trabajaron o que no trabajaron pero sí tenían trabajo en la semana de referencia.',
                                                           null=True, verbose_name='Población masculina ocupada')),
                ('POCUPADA_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 12 a 130 años de edad que trabajaron o que no trabajaron pero sí tenían trabajo en la semana de referencia.',
                                                           null=True, verbose_name='Población femenina ocupada')),
                ('PDESOCUP', models.PositiveIntegerField(blank=True,
                                                         help_text='Personas de 12 a 130 años de edad que no tenían trabajo, pero buscaron trabajo en la semana de referencia.',
                                                         null=True, verbose_name='Población desocupada')),
                ('PDESOCUP_M', models.PositiveIntegerField(blank=True,
                                                           help_text='Hombres de 12 a 130 años de edad que no tenían trabajo, pero buscaron trabajo en la semana de referencia.',
                                                           null=True, verbose_name='Población masculina desocupada')),
                ('PDESOCUP_F', models.PositiveIntegerField(blank=True,
                                                           help_text='Mujeres de 12 a 130 años de edad que no tenían trabajo, pero buscaron trabajo en la semana de referencia.',
                                                           null=True, verbose_name='Población femenina desocupada')),
                ('PSINDER', models.PositiveIntegerField(blank=True,
                                                        help_text='Total de personas que no tienen derecho a recibir servicios médicos en ninguna institución pública o privada.',
                                                        null=True,
                                                        verbose_name='Población sin derechohabiencia a servicios de salud')),
                ('PDER_SS', models.PositiveIntegerField(blank=True,
                                                        help_text='Total de personas que tienen derecho a recibir servicios médicos en alguna institución de salud pública o privada como: el Instituto Mexicano del Seguro Social (IMSS), el Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado (ISSSTE e ISSSTE estatal), Petróleos Mexicanos (PEMEX), la Secretaría de la Defensa Nacional (SEDENA) o la Secretaría de Marina Armada de México (SEMAR), el Seguro Popular o para una Nueva Generación (Incluye al Sistema de Protección Social en Salud que coordina la Secretaría de Salud) o en otra.',
                                                        null=True,
                                                        verbose_name='Población derechohabiente a servicios de salud')),
                ('PDER_IMSS', models.PositiveIntegerField(blank=True,
                                                          help_text='Total de personas que tienen derecho a recibir servicios médicos en el Instituto Mexicano del Seguro Social (IMSS).',
                                                          null=True,
                                                          verbose_name='Población derechohabiente del IMSS')),
                ('PDER_ISTE', models.PositiveIntegerField(blank=True,
                                                          help_text='Total de personas que tienen derecho a recibir servicios médicos en el Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado.',
                                                          null=True,
                                                          verbose_name='Población derechohabiente del ISSSTE')),
                ('PDER_ISTEE', models.PositiveIntegerField(blank=True,
                                                           help_text='Total de personas que tienen derecho a recibir servicios médicos en los institutos de seguridad social de los estados (ISSSET, ISSSEMyM, ISSSTEZAC, ISSSPEA o ISSSTESON).',
                                                           null=True,
                                                           verbose_name='Población derechohabiente del ISSSTE estatal')),
                ('PDER_SEGP', models.PositiveIntegerField(blank=True,
                                                          help_text='Total de personas que tienen derecho a recibir servicios médicos en la Secretaría de Salud, mediante el Sistema de Protección Social en Salud (Seguro Popular).',
                                                          null=True,
                                                          verbose_name='Población derechohabiente del seguro popular o Seguro Médico para una Nueva Generación')),
                ('P12YM_SOLT', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas de 12 a 130 años de edad que viven con su pareja en unión libre; casadas solo por el civil; casadas religiosamente o; casadas por el civil y religiosamente.',
                                                           null=True,
                                                           verbose_name='Población casada o unida de 12 años y más')),
                ('P12YM_CASA', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas de 12 a 130 años de edad que viven con su pareja en unión libre; casadas solo por el civil; casadas solo religiosamente o; casadas por el civil y religiosamente.',
                                                           null=True,
                                                           verbose_name='Población casada o unida de 12 años y más')),
                ('P12YM_SEPA', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas de 12 a 130 años de edad que están separadas, divorciadas o viudas.',
                                                           null=True,
                                                           verbose_name='Población que estuvo casada o unida de 12 años y más')),
                ('PCATOLICA',
                 models.PositiveIntegerField(blank=True, help_text='Personas con religión católica.', null=True,
                                             verbose_name='Población con religión católica')),
                ('PNCATOLICA', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con religiones Protestantes Históricas, Pentecostales, Neopentecostales, Iglesia del Dios Vivo, Columna y Apoyo de la Verdad, la Luz del Mundo, Cristianas, Evangélicas y Bíblicas diferentes de las Evangélicas.',
                                                           null=True,
                                                           verbose_name='Protestantes, Evangélicas y Bíblicas diferentes de evangélicas')),
                ('POTRAS_REL', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas con religiones de Origen oriental, Judaico, Islámico, New Age, Escuelas esotéricas, Raíces étnicas, Espiritualistas, Ortodoxos, Otros movimientos religiosos y Cultos populares.',
                                                           null=True,
                                                           verbose_name='Población con otras religiones diferentes a las anteriores')),
                ('PSIN_RELIG', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas sin adscripción religiosa. Incluye ateísmo.',
                                                           null=True,
                                                           verbose_name='Población con otras religiones diferentes a las anteriores')),
                ('TOTHOG', models.PositiveIntegerField(blank=True,
                                                       help_text='Hogares en viviendas particulares habitadas. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                       null=True, verbose_name='Total de hogares censales')),
                ('HOGJEF_M', models.PositiveIntegerField(blank=True,
                                                         help_text='Hogares en viviendas particulares habitadas donde el jefe es hombre. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                         null=True,
                                                         verbose_name='Hogares censales con jefatura masculina')),
                ('HOGJEF_F', models.PositiveIntegerField(blank=True,
                                                         help_text='Hogares en viviendas particulares habitadas donde el jefe es mujer. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                         null=True,
                                                         verbose_name='Hogares censales con jefatura femenina')),
                ('POBHOG', models.PositiveIntegerField(blank=True,
                                                       help_text='Personas en hogares censales. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                       null=True, verbose_name='Población en hogares censales')),
                ('PHOGJEF_M', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas en hogares censales donde el jefe es hombre. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                          null=True,
                                                          verbose_name='Población en hogares censales con jefatura masculina')),
                ('PHOGJEF_F', models.PositiveIntegerField(blank=True,
                                                          help_text='Personas en hogares censales donde el jefe es mujer. Se considera un hogar en cada vivienda particular. Incluye casa independiente; departamento en edificio; vivienda en vecindad; vivienda en cuarto de azotea; local no construido para habitación; vivienda móvil; refugio o clase no especificada.',
                                                          null=True,
                                                          verbose_name='Población en hogares censales con jefatura femenina')),
                ('TVIVPAR', models.PositiveIntegerField(blank=True,
                                                        help_text='Viviendas particulares habitadas, deshabitadas y de uso temporal. Excluye a las viviendas particulares sin información de ocupantes.',
                                                        null=True, verbose_name='Total de viviendas particulares')),
                ('VIVPAR_HAB', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas de cualquier clase: casa independiente, departamento en edificio, vivienda o cuarto en vecindad, vivienda o cuarto de azotea, local no construido para habitación, vivienda móvil, refugios o clase no especificada. Excluye a las viviendas particulares sin información de ocupantes.',
                                                           null=True, verbose_name='Viviendas particulares habitadas')),
                ('VIVPAR_DES',
                 models.PositiveIntegerField(blank=True, help_text='Viviendas particulares deshabitadas.', null=True,
                                             verbose_name='Viviendas particulares deshabitadas')),
                ('VIVPAR_UT',
                 models.PositiveIntegerField(blank=True, help_text='Viviendas particulares de uso temporal.', null=True,
                                             verbose_name='Viviendas particulares de uso temporal')),
                ('OCUPVIVPAR', models.PositiveIntegerField(blank=True,
                                                           help_text='Personas que residen en viviendas particulares habitadas de cualquier clase: casa independiente, departamento en edificio, vivienda o cuarto en vecindad, vivienda o cuarto de azotea, local no construido para habitación, vivienda móvil, refugios o clase no especificada. Excluye la estimación del número de personas en viviendas particulares sin información de ocupantes.',
                                                           null=True,
                                                           verbose_name='Ocupantes en viviendas particulares habitadas')),
                ('PROM_OCUP', models.PositiveIntegerField(blank=True,
                                                          help_text='Resultado de dividir el número de personas que residen en viviendas particulares habitadas, entre el número de esas viviendas. Excluye la estimación del número de personas y de viviendas particulares sin información de ocupantes.',
                                                          null=True,
                                                          verbose_name='Promedio de ocupantes en viviendas particulares habitadas')),
                ('PRO_OCUP_C', models.PositiveIntegerField(blank=True,
                                                           help_text='Resultado de dividir el número de personas que residen en viviendas particulares habitadas entre el número de cuartos de esas viviendas. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Promedio de ocupantes por cuarto en viviendas particulares habitadas')),
                ('VPH_PISODT', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas con piso de cemento o firme, madera, mosaico u otro material. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con piso de material diferente de tierra')),
                ('VPH_PISOTI', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas con piso de tierra. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con piso de tierra')),
                ('VPH_1DOR', models.PositiveIntegerField(blank=True,
                                                         help_text='Viviendas particulares habitadas donde sólo uno de los cuartos se usa para dormir. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                         null=True,
                                                         verbose_name='Viviendas particulares habitadas con un dormitorio')),
                ('VPH_2YMASD', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que usan para dormir entre 2 y 25 cuartos.Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con dos dormitorios y más')),
                ('VPH_1CUART', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen un solo cuarto. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda. Excluye la estimación del número de personas y de viviendas particulares sin información de ocupantes.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con un solo cuarto')),
                ('VPH_2CUART', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen dos cuartos. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda. Excluye la estimación del número de personas y de viviendas particulares sin información de ocupantes.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con dos cuartos')),
                ('VPH_3YMASC', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen entre 3 y 25 cuartos. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas con 3 cuartos y más')),
                ('VPH_C_ELEC', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen luz eléctrica. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que disponen de luz eléctrica')),
                ('VPH_S_ELEC', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que no tienen luz eléctrica. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que no disponen de luz eléctrica')),
                ('VPH_AGUADV', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen disponibilidad de agua entubada dentro de la vivienda, o fuera de la vivienda pero dentro del terreno. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que disponen de agua entubada en el ámbito de la vivienda')),
                ('VPH_AGUAFV', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen disponibilidad de agua de una llave pública o hidrante, de otra vivienda, de pipa, de pozo, río, arroyo, lago u otro. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que no disponen de agua entubada en el ámbito de la vivienda')),
                ('VPH_EXCSA', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen excusado, retrete, sanitario, letrina u hoyo negro. Excluye la estimación del número de personas y de viviendas particulares sin información de ocupantes.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de excusado o sanitario')),
                ('VPH_DRENAJ', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen drenaje conectado a la red pública, fosa séptica, barranca, grieta, río, lago o mar. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que disponen de drenaje')),
                ('VPH_NODREN', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que no tienen drenaje. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que no disponen de drenaje')),
                ('VPH_C_SERV', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que tienen luz eléctrica, agua entubada dentro o fuera de la vivienda, pero dentro del terreno, así como drenaje. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas que disponen de luz eléctrica, agua entubada de la red pública y drenaje')),
                ('VPH_SNBIEN', models.PositiveIntegerField(blank=True,
                                                           help_text='Viviendas particulares habitadas que no disponen de radio, televisión, refrigerador, lavadora, automóvil, computadora, teléfono fijo, celular ni internet. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                           null=True,
                                                           verbose_name='Viviendas particulares habitadas sin ningún bien')),
                ('VPH_RADIO', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen radio. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a   que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de radio')),
                ('VPH_TV', models.PositiveIntegerField(blank=True,
                                                       help_text='Viviendas particulares habitadas que tienen televisor. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                       null=True,
                                                       verbose_name='Viviendas particulares habitadas que disponen de televisor')),
                ('VPH_REFRI', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen refrigerador. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de refrigerador')),
                ('VPH_LAVAD', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen lavadora. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda..',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de lavadora')),
                ('VPH_AUTOM', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen automóvil o camioneta. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de automóvil o camioneta')),
                ('VPH_PC', models.PositiveIntegerField(blank=True,
                                                       help_text='Viviendas particulares habitadas que tienen computadora. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                       null=True,
                                                       verbose_name='Viviendas particulares habitadas que disponen de computadora')),
                ('VPH_TELEF', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen línea telefónica fija. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de línea telefónica fija')),
                ('VPH_CEL', models.PositiveIntegerField(blank=True,
                                                        help_text='Viviendas particulares habitadas que tienen teléfono celular. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                        null=True,
                                                        verbose_name='Viviendas particulares habitadas que disponen de teléfono celular')),
                ('VPH_INTER', models.PositiveIntegerField(blank=True,
                                                          help_text='Viviendas particulares habitadas que tienen servicio de internet. Comprende las viviendas particulares para las que se captaron las características de la vivienda, clasificadas como casa independiente, departamento en edificio, vivienda o cuarto en vecindad y vivienda o cuarto en azotea y a las que no especificaron clase de vivienda.',
                                                          null=True,
                                                          verbose_name='Viviendas particulares habitadas que disponen de internet')),
                ('CONJHAB', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Conjunto habitacional'),
                                                                                  (3, 'Manzana típica'),
                                                                                  (9, 'Manzana no especificada')],
                                                             help_text='Distinción de la manzana según se trate de un edificio de un conjunto habitacional o de una manzana típica',
                                                             null=True, verbose_name='Tipo de manzana')),
                ('RECUCALL', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Todas las vialidades'),
                                                                                   (2, 'Alguna vialidad'),
                                                                                   (3, 'Ninguna vialidad'),
                                                                                   (4, 'No especificado'),
                                                                                   (5, 'Conjunto habitacional')],
                                                              help_text='Categoría de la manzana según a disponibilidad de pavimento en sus vialidades',
                                                              null=True, verbose_name='Disponibilidad de pavimento')),
                ('BANQUETA', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Todas las vialidades'),
                                                                                   (2, 'Alguna vialidad'),
                                                                                   (3, 'Ninguna vialidad'),
                                                                                   (4, 'No especificado'),
                                                                                   (5, 'Conjunto habitacional')],
                                                              help_text='categoría de la manzana según se la disponibilidad de  banqueta en sus vialidades',
                                                              null=True, verbose_name='Disponibilidad de banqueta')),
                ('GUARNICI', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Todas las vialidades'),
                                                                                   (2, 'Alguna vialidad'),
                                                                                   (3, 'Ninguna vialidad'),
                                                                                   (4, 'No especificado'),
                                                                                   (5, 'Conjunto habitacional')],
                                                              help_text='Categoría de la manzana según la disponibilidad de guarniciónen sus vialidades',
                                                              null=True, verbose_name='Disponibilidad de guarnición')),
                ('ARBOLES', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Todas las vialidades'),
                                                                                  (2, 'Alguna vialidad'),
                                                                                  (3, 'Ninguna vialidad'),
                                                                                  (4, 'No especificado'),
                                                                                  (5, 'Conjunto habitacional')],
                                                             help_text='Categoría de la manzana según la diponibilidad de árboles o plantas de ornato en sus vialidades',
                                                             null=True,
                                                             verbose_name='Disponibilidad de planta de ornato')),
                ('RAMPAS', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Todas las vialidades'),
                                                                                 (2, 'Alguna vialidad'),
                                                                                 (3, 'Ninguna vialidad'),
                                                                                 (4, 'No especificado'),
                                                                                 (5, 'Conjunto habitacional')],
                                                            help_text='Categoría de la manzana según la diponibilidad de rampa para silla de ruedas en sus vialidades',
                                                            null=True,
                                                            verbose_name='Disponibilidad de rampa para silla de ruedas')),
                ('ALUMPUB', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Todas las vialidades'),
                                                                                  (2, 'Alguna vialidad'),
                                                                                  (3, 'Ninguna vialidad'),
                                                                                  (4, 'No especificado')],
                                                             help_text='Categoría de la manzana según la diponibilidad de alumbrado público en sus vialidades',
                                                             null=True,
                                                             verbose_name='Disponibilidad de alumbrado público')),
                ('SENALIZA', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Todas las vialidades'),
                                                                                   (2, 'Alguna vialidad'),
                                                                                   (3, 'Ninguna vialidad'),
                                                                                   (4, 'No especificado'),
                                                                                   (5, 'Conjunto habitacional')],
                                                              help_text='Categoría de la manzana según la diponibilidad de letrero con nombre de la calle en sus vialidades',
                                                              null=True,
                                                              verbose_name='Disponibilidad de letrero con nombre de la calle')),
                ('TELPUB', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Todas las vialidades'),
                                                                                 (2, 'Alguna vialidad'),
                                                                                 (3, 'Ninguna vialidad'),
                                                                                 (4, 'No especificado'),
                                                                                 (5, 'Conjunto habitacional')],
                                                            help_text='Categoría de la manzana según la diponibilidad de teléfono público en sus vialidades',
                                                            null=True,
                                                            verbose_name='Disponibilidad de teléfono público')),
                ('DRENAJEP', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Todas las vialidades'),
                                                                                   (2, 'Alguna vialidad'),
                                                                                   (3, 'Ninguna vialidad'),
                                                                                   (4, 'No especificado'),
                                                                                   (5, 'Conjunto habitacional')],
                                                              help_text='Categoría de la manzana según la diponibilidad de drenaje pluvial en sus vialidades',
                                                              null=True,
                                                              verbose_name='Disponibilidad de drenaje pluvial')),
                ('TRANSCOL', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Todas las vialidades'),
                                                                                   (2, 'Alguna vialidad'),
                                                                                   (3, 'Ninguna vialidad'),
                                                                                   (4, 'No especificado'),
                                                                                   (5, 'Conjunto habitacional')],
                                                              help_text='Categoría de la manzana según la presencia de transporte colectivo en sus vialidades',
                                                              null=True,
                                                              verbose_name='Disponibilidad de transporte colectivo')),
                ('ACESOPER', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Libre en todas las vialidades'),
                                                                                   (
                                                                                   2, 'Restringido en alguna vialidad'),
                                                                                   (3,
                                                                                    'Restringido en todas las vialidades'),
                                                                                   (4, 'No especificado'),
                                                                                   (5, 'Conjunto habitacional')],
                                                              help_text='Categoría de la manzana según el acceso de peatones en sus vialidades',
                                                              null=True, verbose_name='Acceso de peatones')),
                ('ACESOAUT', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Libre en todas las vialidades'),
                                                                                   (
                                                                                   2, 'Restringido en alguna vialidad'),
                                                                                   (3,
                                                                                    'Restringido en todas las vialidades'),
                                                                                   (4, 'No especificado'),
                                                                                   (5, 'Conjunto habitacional')],
                                                              help_text='Categoría de la manzana según el acceso de automóviles en sus vialidades',
                                                              null=True, verbose_name='Acceso de automóviles')),
                ('PUESSEMI', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Todas las vialidades'),
                                                                                   (2, 'Alguna vialidad'),
                                                                                   (3, 'Ninguna vialidad'),
                                                                                   (4, 'No especificado'),
                                                                                   (5, 'Conjunto habitacional')],
                                                              help_text='Categoría de la manzana según la presencia de comercio semifijo en sus vialidades',
                                                              null=True,
                                                              verbose_name='Presencia de comercio semifijo')),
                ('PUESAMBU', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Todas las vialidades'),
                                                                                   (2, 'Alguna vialidad'),
                                                                                   (3, 'Ninguna vialidad'),
                                                                                   (4, 'No especificado'),
                                                                                   (5, 'Conjunto habitacional')],
                                                              help_text='Categoría de la manzana según la presencia de comercio ambulante en sus vialidades',
                                                              null=True,
                                                              verbose_name='Presencia de comercio ambulante')),
                ('VIVTOT', models.PositiveSmallIntegerField(blank=True,
                                                            help_text='Viviendas particulares habitadas, deshabitadas, de uso temporal y colectivas. Incluye a las viviendas particulares sin información de sus ocupantes',
                                                            null=True, verbose_name='Total de viviendas')),
                ('TVIVHAB', models.PositiveSmallIntegerField(blank=True,
                                                             help_text='Viviendas particulares y colectivas habitadas, deshabitadas, de uso temporal y colectivas. Incluye a las viviendas particulares sin información de sus ocupantes',
                                                             null=True, verbose_name='Total de viviendas habitadas')),
                ('TVIVPARHAB', models.PositiveSmallIntegerField(blank=True,
                                                                help_text='Viviendas particulares habitadas, deshabitadas, de uso temporal y colectivas. Incluye a las viviendas particulares sin información de sus ocupantes',
                                                                null=True,
                                                                verbose_name='Total de viviendas particulares habitadas')),
                ('VPH_DEPTO', models.PositiveSmallIntegerField(blank=True,
                                                               help_text='Viviendas particulares habitadas cuya clase esdepartamento en edificio.',
                                                               null=True,
                                                               verbose_name='Viviendas particulares en departamento en edificio')),
                ('cvegeo', models.CharField(max_length=16)),
                ('cve_mun', models.CharField(max_length=3)),
                ('cve_loc', models.CharField(max_length=4)),
                ('cve_ageb', models.CharField(max_length=4)),
                ('cve_mza', models.CharField(max_length=3)),
                ('ambito', models.PositiveSmallIntegerField(choices=[(0, 'No Aplica'), (1, 'Urbana'), (2, 'Rural')])),
                ('tipomza', models.PositiveSmallIntegerField(
                    choices=[(0, 'No Aplica'), (1, 'Típica'), (2, 'Atípica'), (3, 'Contenedora'), (4, 'Contenida'),
                             (5, 'Económica'), (6, 'Edificio-Manzana'), (7, 'Glorieta'), (8, 'Parque o Jardín'),
                             (9, 'Camellón'), (10, 'Bajo Puente')])),
                ('ageb', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='geo.ageb')),
                ('entidad',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='geo.entidad')),
                ('localidad',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='geo.localidad')),
                ('municipio',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='geo.municipio')),
                ],
            options={
                'abstract': False,
                },
            ),
        migrations.AddField(
            model_name='localidad',
            name='municipio',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='geo.municipio'),
            ),
        migrations.AddField(
            model_name='ageb',
            name='entidad',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='geo.entidad'),
            ),
        migrations.AddField(
            model_name='ageb',
            name='localidad',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agebs',
                                    to='geo.localidad'),
            ),
        migrations.AddField(
            model_name='ageb',
            name='municipio',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='geo.municipio'),
            ),
        ]
